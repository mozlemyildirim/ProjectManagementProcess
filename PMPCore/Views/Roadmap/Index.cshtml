@{
    ViewBag.Title = "Yol Haritası";
    ViewBag.ActivePageName = "Yol Haritası";
}
@model List<DateTime>

<style>

    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        left: 40px;
        top: -180px;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        s
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 70%; /* Could be more or less, depending on screen size */
    }

    /* The Close Button */
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    .actionIcon:hover {
        cursor: pointer;
    }
</style>
<!-- <button id="btnMilestoneEkleModal" onclick="$('#modalMilestoneEkle').show(); getAllProject();">Milestone Ekle</button> -->

<script>
    $(document).ready(function () {
                GetProjectPercentage();
        getMilestoneInfo();

    });

    function getAllProject() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAllProjeler", "Project")',
            data: {},
            dataType: 'json',
            async: false,
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    var html = `<option value="` + data[i]["Id"] + `">` + data[i]["Name"] + `</option>`;

                    $("#divMilestoneEkleSelect select").append(html);
                }

            },
            error: function (err) {
                swal("hata!");
            }
        });
    }
    function GetProjectPercentage() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProjectPercentage", "Roadmap")',
            data: {
            },
            dataType: 'json',
            success: function (data) {
                $("#projectPerId").html("Proje Yüzdesi: " + data + "%");
                $("#projectPerId").fadeIn(300);
            },
            error: function (err) {
            }
        });
    }

    function saveMilestone() {

        var titleMilestone = $("#titleMilestone").val();
        var startDate = $("#StartDatePicker1").val();
        var endDate = $("#EndDatePicker1").val();
        var description = $("#MileDescription").val();
        var projectID = $("#divMilestoneEkleSelect select").val();
        var milestoneId = $("#modalProjeEkleProjeId").val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveMilestone", "Roadmap")',
            data: {
                "_titleMilestone": titleMilestone,
                "_endDate": endDate,
                "_startDate": startDate,
                "_description": description,
                "_projectID": projectID,
                "_milestoneId": milestoneId

            },
            success: function (data) {
                swal("BAŞARILI!");
                $("#modalProjeEkleProjeId").val('0');
                $("#titleMilestone").val('');
                $("#StartDatePicker1").val('@DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/")');
                $("#EndDatePicker1").val('@DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/")');
                $("#MileDescription").val('');
            },
            error: function (err) {
                swal("Milestone kaydedilemedi!");
            }
        });

    }

    function getMilestoneInfo() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetMilestoneInfo", "Roadmap")',
            data: {},
            dataType: 'json',
            async: false,
            success: function (data) {

                am4core.useTheme(am4themes_animated);
                // Themes end

                var chart = am4core.create("chartdiv", am4charts.XYChart);

                //var resultData = Json.parse(data);
                var insert = [];

                for (var i = 0; i < data.length; i++) {
                    var startDate = data[i]["StartDate"].split("T")[0];
                    var endDate = data[i]["EndDate"].split("T")[0];
                    var percent = data[i]["FinishPercent"];


                    var totalTaskDay = days_between(startDate, endDate);

                    var totalSpentDay = percent == 0 ? 0 : (totalTaskDay / 100) * percent;
                    var newDate = addDays(startDate, parseInt(totalSpentDay));

                    insert.push({ "category": data[i]["MilestoneName"], "start": startDate, "end": endDate, "color": '#35dff4', "task": data[i]["MilestoneName"] + "\nBaşlangıç: " + getTRDateFormat(startDate) + "\nBitiş: " + getTRDateFormat(endDate) });

                    if (percent == 100) {
                        insert.push({ "category": data[i]["MilestoneName"], "start": startDate, "end": endDate, "color": '#039aad', "task": "%" + percent + " tamamlandı." });
                    }
                    else
                        insert.push({ "category": data[i]["MilestoneName"], "start": startDate, "end": percent == 0 ? startDate : newDate, "color": '#039aad', "task": "%" + percent + " tamamlandı." });

                    var delayedStepList = data[i]["DelayedTaskList"];

                    for (var k = 0; k < delayedStepList.length; k++) {
                        var xStartDate = delayedStepList[k]["StartDate"].split("T")[0];
                        var xEndDate = delayedStepList[k]["EndDate"].split("T")[0];
                        insert.push({ "category": data[i]["MilestoneName"], "start": xStartDate, "end": xEndDate, "color": 'rgba(193, 0, 0, 1)', "task": delayedStepList[k]["Name"] + " isimli görev " + (days_between(xStartDate, xEndDate) + 1) + " gün gecikti." });
                    }

                }

                chart.data = insert;


                var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                categoryAxis.dataFields.category = "category";
                categoryAxis.renderer.grid.template.location = 0;
                categoryAxis.renderer.minGridDistance = 1;

                var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
                dateAxis.baseInterval = { count: 1, timeUnit: "day" };
                var series1 = chart.series.push(new am4charts.ColumnSeries());
                series1.columns.template.width = am4core.percent(80);
                series1.columns.template.tooltipText = "[bold]{task}";

                series1.dataFields.openDateX = "start";
                series1.dataFields.dateX = "end";
                series1.dataFields.categoryY = "category";
                series1.columns.template.propertyFields.fill = "color"; // get color from data
                series1.columns.template.propertyFields.stroke = "color";
                series1.columns.template.strokeOpacity = 1;

                chart.scrollbarX = new am4core.Scrollbar();
                var cellSize = 20;
                chart.events.on("datavalidated", function (ev) {

                    // Get objects of interest
                    var chart = ev.target;
                    var categoryAxis = chart.yAxes.getIndex(0);

                    // Calculate how we need to adjust chart height
                    var adjustHeight = chart.data.length * cellSize - categoryAxis.pixelHeight;

                    // get current chart height
                    var targetHeight = chart.pixelHeight + adjustHeight;

                    // Set it on chart's container
                    chart.svgContainer.htmlElement.style.height = targetHeight + "px";
                });

                chart.events.on("track", function (ev) {

                    $("tspan").removeAttr("fill").attr("fill", "white");
                    var gler = $("g");

                    for (var i = 0; i < gler.length; i++) {
                        var stroke = $(gler[i]).attr("stroke");
                        var fill = $(gler[i]).attr("fill");

                        if (stroke != null && fill == "none") {
                            $(gler[i]).removeAttr("stroke").attr("stroke", "silver");
                            $(gler[i]).removeAttr("stroke-opacity").attr("stroke-opacity", "0.3");
                        }
                    }
                }, this);

                chart.events.on("ready", function (ev) {
                    $("#chartdiv title").last().parent().remove()
                    var elems = [];

                    for (var i = 1; i < $("g[transform='translate(0,0)'] tspan").length; i++) {
                        elems.push($("g[transform='translate(0,0)'] tspan")[i]);
                    }

                    for (var i = 0; i < elems.length; i++) {
                        var dd = elems[i];
                        $(elems[i]).removeAttr("class").attr("class", "actionIcon");
                        $(elems[i]).removeAttr("onclick").attr("onclick", "getChartDetail('" + dd.innerHTML.trim() + "')");

                    }

                    $("tspan").removeAttr("fill").attr("fill", "white");
                    var gler = $("g");

                    for (var i = 0; i < gler.length; i++) {
                        var stroke = $(gler[i]).attr("stroke");
                        var fill = $(gler[i]).attr("fill");

                        if (stroke != null && fill == "none") {
                            $(gler[i]).removeAttr("stroke").attr("stroke", "silver");
                            $(gler[i]).removeAttr("stroke-opacity").attr("stroke-opacity", "0.3");
                        }
                    }
                });



            },
            error: function (err) {
                swal("hata!");
            }
        });
    }

</script>
<script>
    //Date picker
    //  $('#StartDatePicker1').datepicker({
    //    autoclose: true
    //  })
    //  $('#EndDatePicker1').datepicker({
    //    autoclose: true
    //  })</script>
<!-- Styles -->
<style>

    #chartdiv {
        margin-top: 30px;
        background-color: #487e95;
        width: 100%;
        height: 750px !important;
    }
</style>
<script>
  $("#tarihDiv").html(`<h6>
    <b style="text-transform: initial; display: block; background: linear-gradient(to left, #d2d2d2, #27c6da); -webkit-background-clip: text !important; -webkit-text-fill-color: transparent;">Başlangıç Tarihi: @Html.Raw(Model.FirstOrDefault().Year == 1 ? "-" : Model.FirstOrDefault().ToString("dd/MM/yyyy"))</b>

    <b style="text-transform: initial; display: block; background: linear-gradient(to left, #d2d2d2, #27c6da); -webkit-background-clip: text !important; -webkit-text-fill-color: transparent;">Bitiş Tarihi: @Html.Raw(Model.LastOrDefault().Year == 1 ? "-" : Model.LastOrDefault().ToString("dd/MM/yyyy"))</b>

    <b id="projectPerId" style="display: none; text-transform: initial; display: block; background: linear-gradient(to left, #d2d2d2, #27c6da); -webkit-background-clip: text !important; -webkit-text-fill-color: transparent;">Proje Yüzdesi: -</b>
  </h6>`);
</script>


<div id="chartdiv"></div>
<!-- Resources -->
<script src="~/Content/OfflineScripts/core.js"></script>
<script src="~/Content/OfflineScripts/charts.js"></script>
<script src="~/Content/OfflineScripts/animated.js"></script>
<!-- Chart code -->

<script>

function days_between(date1, date2) {
	date1 = new Date(date1.split("-")[0], date1.split("-")[1], date1.split("-")[2]);
	date2 = new Date(date2.split("-")[0], date2.split("-")[1], date2.split("-")[2]);
    // The number of milliseconds in one day
    var ONE_DAY = 1000 * 60 * 60 * 24;

    // Convert both dates to milliseconds
    var date1_ms = date1.getTime();
    var date2_ms = date2.getTime();

    // Calculate the difference in milliseconds
    var difference_ms = Math.abs(date1_ms - date2_ms);

    // Convert back to days and return
    return Math.round(difference_ms/ONE_DAY);

    }



    function addDays(date, days) {
        var result = new Date(date.split("-")[0], parseInt(date.split("-")[1]) - 1, date.split("-")[2]);
        result.setDate(result.getDate() + days);
        var y = result.getFullYear();
        var m = result.getMonth().toString().length == 1 ? "0" + result.getMonth().toString() : result.getMonth().toString();
        var d = result.getDay().toString().length == 1 ? "0" + result.getDay().toString() : result.getDay().toString();
        return result.toISOString().substring(0, 10);
    }

    function getTRDateFormat(date) {
        var year = date.split("-")[0];
        var month = date.split("-")[1];
        var day = date.split("-")[2];

        return day + "/" + month + "/" + year;
    }

    function getChartDetail(milestoneName) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetChartDetail", "Roadmap")',
            data: {
                "_milestoneName": milestoneName
            },
            success: function (data) {

                $("#modalChartDetay table tbody").html('');
                var html = "";
                for (var i = 0; i < data.length; i++) {
                    html += "<tr>";
                    html += "<td>" + customReplaceAll(data[i]["SprintName"], " ", "&nbsp") + "</td>";
                    html += data[i]["TaskStatus"] == 3 ? ("<td><del>" + data[i]["TaskName"] + "</del></td>") : ("<td>" + data[i]["TaskName"] + "</td>");
                    html += "<td>" + data[i]["AssigneeUserName"] + "</td>";
                    html += "<td style=\"text-align: left;\">" + customReplaceAll(customReplaceAll(data[i]["Workers"], ", ", "<br>"), " ", "&nbsp") + "</td>";
                    html += "</tr>";
                }

                $("#modalChartDetay table tbody").html(html);
                $("#modalChartDetay").modal('show');
            }
        });
    }




    $(document).ready(function () {
        //getMilestoneInfo();
    });

    function getAllProject() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAllProjeler", "Project")',
            data: {},
            dataType: 'json',
            async: false,
            success: function (data) {

                $("#divMilestoneEkleSelect select").html('');
                var html = '';


                for (var i = 0; i < data.length; i++) {
                    html += `<option value="` + data[i]["Id"] + `">` + data[i]["Name"] + `</option>`;

                }
                $("#divMilestoneEkleSelect .selectpicker").html(html);
                $('.selectpicker').selectpicker();
                $('.selectpicker').selectpicker('refresh');

            },
            error: function (err) {
                swal("hata!");
            }
        });
    }

    function saveMilestone() {

        var titleMilestone = $("#titleMilestone").val();
        var startDate = $("#StartDatePicker1").val();
        var endDate = $("#EndDatePicker1").val();
        var description = $("#MileDescription").val();
        var projectID = $("#divMilestoneEkleSelect select").val();
        var milestoneId = $("#modalProjeEkleProjeId").val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveMilestone", "Roadmap")',
            data: {
                "_titleMilestone": titleMilestone,
                "_endDate": endDate,
                "_startDate": startDate,
                "_description": description,
                "_projectID": projectID,
                "_milestoneId": milestoneId

            },
            success: function (data) {
                swal("BAŞARILI!");
                $("#modalProjeEkleProjeId").val('0');
                $("#titleMilestone").val('');
                $("#StartDatePicker1").val('@DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/")');
                $("#EndDatePicker1").val('@DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/")');
                $("#MileDescription").val('');
                window.location.reload();
            },
            error: function (err) {
                swal("hata!");
            }
        });

    }

</script>

<div id="modalChartDetay" class="modal">
    <div class="modal-content">
        <i onclick="$('#modalChartDetay').modal('hide');" class="actionIcon fa fa-times"></i>
        <h3 class="box-title">Görevler</h3>
        <div style="line-height:2.5">
            <div class="box-header">
                <div class="box-tools">
                    <div class="input-group input-group-sm" style="width: 150px;">
                    </div>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body col-md-15">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Sprint&nbsp;Adı</th>
                            <th>Görev&nbsp;Adı</th>
                            <th>Atanan&nbsp;Kullanıcı</th>
                            <th>Çalışanlar</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <!-- MILESTONE EKLE MODAL -->
            <div class="modal fade" id="milestoneEkleModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none; margin-top: 160px;">
                <div class="modal-dialog modal-login">
                    <div class="modal-content" style="width: 100%">
                        <div class="card card-signup card-plain">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="material-icons">clear</i></button>
                                <div class="header header-info text-center">
                                    <h4 class="card-title">Milestone Oluştur</h4>
                                    <p class="description text-center" style="color: white;">
                                        Buradan milestone oluşturabilirsiniz.
                                    </p>
                                </div>
                            </div>
                            <div class="modal-body mr-3 ml-0">
                                <form class="form" method="" action="">
                                    <div class="card-content py-4">
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <i class="material-icons">text_format</i>
                                            </span>
                                            <input id="modalProjeEkleProjeId" value="0" style="display: none;" />
                                            <div class="form-group is-empty">
                                                <input id="titleMilestone" type="text" class="form-control" style="color:black!important;" placeholder="Başlık giriniz.">
                                            </div>
                                        </div>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <i class="material-icons">calendar_today</i>
                                            </span>
                                            <div class="form-group">
                                                <label class="label-control">Başlangıç Tarihi</label>
                                                <input id="StartDatePicker1" style="color:black!important;" type="text"
                                                       class="form-control datepicker"
                                                       value="@DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/")" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <i class="material-icons">calendar_today</i>
                                            </span>
                                            <div class="form-group">
                                                <label class="label-control">Bitiş Tarihi</label>
                                                <input id="EndDatePicker1" style="color:black!important;" type="text"
                                                       class="form-control datepicker"
                                                       value="@DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/")" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="input-group mt-3">
                                            <span class="input-group-addon">
                                                <i class="material-icons">description</i>
                                            </span>
                                            <div class="form-group is-empty">
                                                <textarea id="MileDescription" class="form-control"
                                                          style="color:black !important;"
                                                          placeholder="Açıklama giriniz." rows="4"></textarea>
                                            </div>
                                        </div>
                                        <div id="divMilestoneEkleSelect" class="input-group mt-5">
                                            <span class="input-group-addon">
                                                <i class="material-icons">linear_scale</i>
                                            </span>
                                            <div class="form-group is-empty">
                                                <select class="selectpicker">
                                                    data-style="btn btn-info btn-round"
                                                    title="sprınt seçin" data-size="7">
                                                    <option value="2">Foobar</option>
                                                    <option value="3">Is great</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                            </div>
                            </form>
                        </div>
                        <div class="modal-footer text-center m-5 my-auto py-4"
                             style="border-top: 1px solid #f1efef;">
                            <button onclick="saveMilestone()" class="btn btn-info btn-round">
                                <i class="material-icons">save_alt</i> Kaydet
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- MILESTONE EKLE MODAL -->
        </div>
    </div>
</div>
                </div>
            </div>
        </div>
    </div>


