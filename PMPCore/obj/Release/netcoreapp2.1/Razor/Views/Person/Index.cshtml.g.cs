#pragma checksum "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e57bb23a4987aacb54276209a9bbaa45842dadcb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Person_Index), @"mvc.1.0.view", @"/Views/Person/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Person/Index.cshtml", typeof(AspNetCore.Views_Person_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\merve\Desktop\PMP\PMPCore\Views\_ViewImports.cshtml"
using PMPCore;

#line default
#line hidden
#line 2 "C:\Users\merve\Desktop\PMP\PMPCore\Views\_ViewImports.cshtml"
using PMPCore.Models;

#line default
#line hidden
#line 5 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
using PMPDAL.Entities;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e57bb23a4987aacb54276209a9bbaa45842dadcb", @"/Views/Person/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4fb46c8f1508255f860685ecf7a4631592682f6c", @"/Views/_ViewImports.cshtml")]
    public class Views_Person_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
  
    ViewBag.Title = "Kişi & Takım İşlemleri";
    ViewBag.ActivePageName = "Kişi & Takım İşlemleri";

#line default
#line hidden
#line 6 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
  
    var activePerson = ViewBag.ActivePerson as Person;
    if (activePerson.IsAdmin == 0)
    {

        

#line default
#line hidden
            BeginContext(249, 86, false);
#line 11 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
   Write(Html.Raw("<script>window.location = '" + @Url.Action("Index", "Home") + "';</script>"));

#line default
#line hidden
            EndContext();
#line 11 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                                                                                               
    }

#line default
#line hidden
            BeginContext(347, 5197, true);
            WriteLiteral(@"
<style>
    .ps-scrollbar-y-rail {
        top: 30px!important;
        right: 0px!important;
        height: 900px !important;
    }
    .ps-scrollbar-x-rail {
        left: 0px;
        bottom: -71px;
    }
    .dataTable{
        color:white !important;
    }
    .row {
        color: black;
    }
    .checkbox label, .radio label, label, .label-on-left, .label-on-right {
        color: white;
    }

    .pagination > li > a, .pagination > li > span {
        color: white;
    }

    th {
        font-size: 18px;
    }

    td {
        font-size: 18px;
    }

    .table > tbody > tr {
        background-color: #07a0b1;
    }

    .table-striped > tbody > tr:nth-of-type(odd) {
        background-color: #54bcc8;
    }

    table.dataTable {
        background-color: #304a5e;
    }
</style>
<!-- gell all person div -->
<div class=""container-fluid"">
    <!-- AKTİF PROJELER BURADAN BAŞLIYOR -->
    <div class=""col-md-12 mb-5 pb-5"" style=""margin-top:25px;"">
    ");
            WriteLiteral(@"    <div class=""card""
             style=""background: #486d89; color: white; box-shadow: 0px 0px 9px 2px #48484896; border-radius: 10px;"">
            <div onclick=""fillPersonTeamSelect(); $('#modalUserEkleUserId').val('0');$('#modalUserEkleUserName').val('');$('#modalUserEkleUserSurname').val('');$('#modalUserEkleUserMail').val('');$('#modalUserEkleUserPassword').val('');"" class=""card-header card-header-icon"" data-background-color=""blue""
                 style=""cursor:pointer;"" data-toggle=""modal"" data-target=""#kullaniciEkleModal"">
                <h4><small><b style=""color:white;"">YENİ KULLANICI EKLE</b></small></h4>
            </div>
            <div class=""card-content"">
                <div id=""divProjeListesi"" class=""box-body no-padding"">
                    <div style=""clear: both;""></div>
                    <table class=""table table-striped table-no-bordered table-hover dataTable dtr-inline""></table>
                </div>
            </div>
            <!-- end content-->
        </div");
            WriteLiteral(@">
        <!--  end card  -->
        <!-- Team Ekle Table -->
        <div class=""card"" style=""background: #486d89; color: white; box-shadow: 0px 0px 9px 2px #48484896; border-radius: 10px;"">
            <div onclick=""fillPersonTeamSelect(); fillAddTeamSelectDepartmentList(); $('#modalTeamEkleUserId').val('0');$('#modalTeamEkleName').val('');"" class=""card-header card-header-icon"" data-background-color=""blue""
                 style=""cursor:pointer;"" data-toggle=""modal"" data-target=""#TeamEkleModal"">
                <h4><small><b style=""color:white;"">YENİ TAKIM EKLE</b></small></h4>
            </div>
            <div class=""card-content"">
                <div id=""divTeamListesi"" class=""box-body no-padding"">
                    <div style=""clear: both;""></div>
                    <table class=""table table-striped table-no-bordered table-hover dataTable dtr-inline""></table>
                </div>
            </div>
            <!-- end content-->
        </div>
        <!-- Team Ekle Table Burada");
            WriteLiteral(@" Bitiyor -->
        <!-- Departman Ekle Başlangıç -->
        <div class=""card"" style=""background: #486d89; color: white; box-shadow: 0px 0px 9px 2px #48484896; border-radius: 10px;"">
            <div onclick=""fillDepartmentHeadSelect(); $('#modalDepartmanEkleDeptId').val('0');$('#modalDepartmanEkleDeptName').val('');"" class=""card-header card-header-icon"" data-background-color=""blue""
                 style=""cursor:pointer;"" data-toggle=""modal"" data-target=""#DepartmanEkleModal"">
                <h4><small><b style=""color:white;"">YENİ DEPARTMAN EKLE</b></small></h4>
            </div>
            <div class=""card-content"">
                <div id=""divDepartmanListesi"" class=""box-body no-padding"">
                    <div style=""clear: both;""></div>
                    <table class=""table table-striped table-no-bordered table-hover dataTable dtr-inline""></table>
                </div>
            </div>
        </div>


    </div>
    <!-- AKTİF PROJELER BURADA BİTİYOR -->
    <!-- YENİ PROJE ");
            WriteLiteral(@"EKLE MODAL -->
    <div class=""modal fade"" id=""kullaniciEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel""
         aria-hidden=""true"" style=""display: none;"">
        <div class=""modal-dialog modal-login"">
            <div class=""modal-content"">
                <div class=""card card-signup card-plain"">
                    <div class=""modal-header"">
                        <button onclick="""" type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">
                            <i class=""material-icons"">clear</i>
                        </button>

                        <div class=""header header-info text-center"">
                            <h4 class=""card-title"">Kullanıcı Oluştur</h4>
                            <p class=""description text-center"" style=""color:white;"">
                                Buradan
                                kullanıcı oluşturabilirsiniz.
                            </p>
                        </div>
                    </div>
   ");
            WriteLiteral("                 <div class=\"modal-body mr-3 ml-0\">\r\n                        ");
            EndContext();
            BeginContext(5544, 3822, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da1129791b844743957ec24445fb8ad7", async() => {
                BeginContext(5583, 3776, true);
                WriteLiteral(@"
                            <div class=""card-content py-4"">
                                <div class=""input-group"">
                                    <span class=""input-group-addon"">
                                        <i class=""material-icons"">text_format</i>
                                    </span>
                                    <div class=""form-group is-empty"">
                                        <input id=""modalUserEkleUserId"" value=""0"" style=""display: none;"" />
                                        <input id=""modalUserEkleUserName"" type=""text"" class=""form-control"" style=""color:black!important;"" placeholder=""Ad"">
                                    </div>
                                </div>

                                <div class=""input-group"">
                                    <span class=""input-group-addon"">
                                        <i class=""material-icons"">code</i>
                                    </span>
                               ");
                WriteLiteral(@"     <div class=""form-group is-empty"">
                                        <input id=""modalUserEkleUserSurname"" type=""text"" class=""form-control"" style=""color:black!important;"" placeholder=""Soyad"">
                                    </div>
                                </div>
                                <div class=""input-group"">
                                    <span class=""input-group-addon"">
                                        <i class=""material-icons"">short_text</i>
                                    </span>
                                    <div class=""form-group is-empty"">
                                        <input id=""modalUserEkleUserMail"" type=""text"" class=""form-control"" style=""color:black!important;"" placeholder=""EPosta Adresi"">
                                    </div>
                                </div>
                                <div class=""input-group"">
                                    <span class=""input-group-addon"">
                             ");
                WriteLiteral(@"           <i class=""material-icons"">short_text</i>
                                    </span>
                                    <div class=""form-group is-empty"">
                                        <input id=""modalUserEkleUserPassword"" type=""password"" class=""form-control"" style=""color:black!important;"" placeholder=""Şifre"" autocomplete=""off"">
                                    </div>
                                </div>
                                <div class=""input-group"">
                                    <span class=""input-group-addon"">
                                        <i class=""material-icons"">short_text</i>
                                    </span>
                                    <div class=""form-group is-empty"">
                                        <label class=""pure-material-checkbox"" style=""margin-top: 8px;"">
                                            <input id=""isAdmin"" type=""checkbox"">
                                            <span><span style=""margin-");
                WriteLiteral(@"top: -23px; display: block; margin-left: 27px;"">Admin mi?</span></span>
                                        </label>
                                    </div>
                                </div>
                                <div class=""input-group"">
                                    <span class=""input-group-addon"">
                                        <i class=""material-icons"">person</i>
                                    </span>
                                    <div id=""divKullaniciEkleTeamId"" class=""form-group is-empty"">

                                    </div>
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9366, 1628, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4"" style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""saveUser()"" class=""btn btn-info btn-round""><i class=""material-icons"">save_alt</i> Kaydet</button>
                </div>
            </div>
        </div>
    </div>
    <!-- YENİ PROJE EKLE MODAL -->
    <!-- TAMAMLANMIŞ PROJELER BURADA BİTİYOR -->
</div>
        </div>



<!-- get all TEAM div Modal -->
<div class=""container-fluid"">

    <div class=""modal fade"" id=""TeamEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel""
         aria-hidden=""true"" style=""display: none;"">
        <div class=""modal-dialog modal-login"">
            <div class=""modal-content"">
                <div class=""card card-signup card-plain"">
                    <div class=""modal-header"">
                        <button onclick="""" type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">");
            WriteLiteral(@"
                            <i class=""material-icons"">clear</i>
                        </button>

                        <div class=""header header-info text-center"">
                            <h4 class=""card-title"">Takım Oluştur</h4>
                            <p class=""description text-center"" style=""color:white;"">
                                Buradan
                                Takım oluşturabilirsiniz.
                            </p>
                        </div>
                    </div>
                    <div class=""modal-body mr-3 ml-0"">
                        ");
            EndContext();
            BeginContext(10994, 1293, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "43d06ad32c90479f809a131d7d7b9aaf", async() => {
                BeginContext(11033, 1247, true);
                WriteLiteral(@"
                            <div class=""card-content py-4"">
                                <div class=""input-group"">
                                    <span class=""input-group-addon"">
                                        <i class=""material-icons"">text_format</i>
                                    </span>
                                    <div class=""form-group is-empty"">
                                        <input id=""modalTeamEkleUserId"" value=""0"" style=""display: none;"" />
                                        <input id=""modalTeamEkleName"" type=""text"" class=""form-control"" style=""color:black!important;"" placeholder=""Takım Adı"">
                                    </div>
                                </div>

                                <div class=""input-group"">
                                    <span class=""input-group-addon"">
                                        <i class=""material-icons"">person</i>
                                    </span>

                        ");
                WriteLiteral("            <div id=\"divTakimEkleDepartmentId\" class=\"form-group is-empty\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(12287, 1667, true);
            WriteLiteral(@"
                    </div>
                    <div class=""modal-footer text-center m-5 my-auto py-4"" style=""border-top: 1px solid #f1efef;"">
                        <button onclick=""saveTeam()"" class=""btn btn-info btn-round""><i class=""material-icons"">save_alt</i> Kaydet</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Team Div burada bitiyor -->
    <!-- Departman Ekle Div Başlangıç -->
    <div class=""container-fluid"">

        <div class=""modal fade"" id=""DepartmanEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel""
             aria-hidden=""true"" style=""display: none;"">
            <div class=""modal-dialog modal-login"">
                <div class=""modal-content"">
                    <div class=""card card-signup card-plain"">
                        <div class=""modal-header"">
                            <button onclick="""" type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">
                ");
            WriteLiteral(@"                <i class=""material-icons"">clear</i>
                            </button>

                            <div class=""header header-info text-center"">
                                <h4 class=""card-title"">Departman Oluştur</h4>
                                <p class=""description text-center"" style=""color:white;"">
                                    Buradan
                                    Departman oluşturabilirsiniz.
                                </p>
                            </div>
                        </div>
                        <div class=""modal-body mr-3 ml-0"">
                            ");
            EndContext();
            BeginContext(13954, 1384, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "04fcfc819cd745a5b8b46a5e3e06a9d4", async() => {
                BeginContext(13993, 1338, true);
                WriteLiteral(@"
                                <div class=""card-content py-4"">
                                    <div class=""input-group"">
                                        <span class=""input-group-addon"">
                                            <i class=""material-icons"">text_format</i>
                                        </span>
                                        <div class=""form-group is-empty"">
                                            <input id=""modalDepartmanEkleDeptId"" value=""0"" style=""display: none;"" />
                                            <input id=""modalDepartmanEkleDeptName"" type=""text"" class=""form-control"" style=""color:black!important;"" placeholder=""Departman Adı"">
                                        </div>
                                    </div>
                                    <div class=""input-group"">
                                        <span class=""input-group-addon"">
                                            <i class=""material-icons"">person</i>
   ");
                WriteLiteral(@"                                     </span>
                                        <div id=""divDepartmentEkleHeadId"" class=""form-group is-empty"">

                                        </div>
                                    </div>

                                </div>
                            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15338, 2085, true);
            WriteLiteral(@"
                        </div>
                    </div>
                    <div class=""modal-footer text-center m-5 my-auto py-4"" style=""border-top: 1px solid #f1efef;"">
                        <button onclick=""saveDepartman()"" class=""btn btn-info btn-round""><i class=""material-icons"">save_alt</i> Kaydet</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            getAllPerson();
            getAllTeam();
            getAllDepartment();
            getAllTeamSelect();
        });</script>

    <!-- Person Ekle Script buradan baslıyor -->
    <script>
        function fillDepartmentHeadSelect() {
            var list = getAllPersonList();

            $(""#divDepartmentEkleHeadId"").html('<select class=""selectpicker"" data-style=""btn btn-info btn-round"" title=""Departman Yetkilisi Seçiniz...""></select>');

            for (var i = 0; i < list.length; i++) {
                $(""#");
            WriteLiteral(@"divDepartmentEkleHeadId select"").append('<option value=""' + list[i][""Id""] + '"">' + list[i][""Name""] + ' ' + list[i][""Surname""] + '</option>');
            }

            $("".selectpicker"").selectpicker();
            $("".selectpicker"").selectpicker('refresh');
        }

        function fillPersonTeamSelect()
        {
            var list = getAllTeam();

            $(""#divKullaniciEkleTeamId"").html('<select class=""selectpicker"" data-style=""btn btn-info btn-round"" title=""Takım Seçiniz...""></select>');

            for(var i = 0; i < list.length; i++)
            {
                $(""#divKullaniciEkleTeamId select"").append('<option value=""'+list[i][""Id""]+'"">'+list[i][""Name""]+'</option>');
            }

            $("".selectpicker"").selectpicker();
            $("".selectpicker"").selectpicker('refresh');
        }

        function prepareKullaniciUpdatePanel(_personId)
        {
            fillPersonTeamSelect();

            //GetPersonById
            $.ajax({
                ");
            WriteLiteral("type: \"POST\",\r\n                url: \'");
            EndContext();
            BeginContext(17424, 37, false);
#line 356 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                 Write(Url.Action("GetPersonById", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(17461, 1178, true);
            WriteLiteral(@"',
                data: {
                    ""_personId"": _personId
                },
                success: function (data) {
                    console.log(data);
                    $(""#modalUserEkleUserId"").val(data[""Id""]);
                    $(""#modalUserEkleUserName"").val(data[""Name""]);
                    $(""#modalUserEkleUserSurname"").val(data[""Surname""]);
                    $(""#modalUserEkleUserMail"").val(data[""Email""]);
                    $(""#modalUserEkleUserPassword"").val(data[""Password""]);
                    $(""#divKullaniciEkleTeamId select"").val(data[""TeamId""]);
                    $(""#isAdmin"").prop(""checked"", data[""IsAdmin""] == 1);

                    setTimeout(function () {
                        $("".selectpicker"").selectpicker();
                        $("".selectpicker"").selectpicker('refresh');
                    }, 200);

                    $(""#kullaniciEkleModal"").modal('show');
                }
            });
    }

        function prepareDepar");
            WriteLiteral("tmentUpdatePanel(_deptId)\r\n        {\r\n            fillDepartmentHeadSelect();\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: \'");
            EndContext();
            BeginContext(18640, 41, false);
#line 385 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                 Write(Url.Action("GetDepartmentById", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(18681, 710, true);
            WriteLiteral(@"',
                data: {
                    ""_deptId"": _deptId
                },
                success: function (data) {
                    $(""#divDepartmentEkleHeadId select"").val(data[""HeadOfDepartmentId""]);
                    $(""#modalDepartmanEkleDeptId"").val(data[""Id""]);
                    $(""#modalDepartmanEkleDeptName"").val(data[""DepartmentName""]);
                    $("".selectpicker"").selectpicker('refresh');

                    $(""#DepartmanEkleModal"").modal('show');
                }
            });
         }

        function getAllDepartmentList() {
            var returnResult = null;
            $.ajax({
                type: ""POST"",
                url: '");
            EndContext();
            BeginContext(19392, 40, false);
#line 404 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                 Write(Url.Action("GetAllDepartment", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(19432, 352, true);
            WriteLiteral(@"',
                data: {},
                async: false,
                success: function (data) {
                    returnResult = data;
                }
            });

            return returnResult;
        }

    function getAllDepartment()
       {
               $.ajax({
               type: ""POST"",
               url: '");
            EndContext();
            BeginContext(19785, 40, false);
#line 419 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                Write(Url.Action("GetAllDepartment", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(19825, 2163, true);
            WriteLiteral(@"',
               data: {},
               success: function (data) {

                      $('#divDepartmanListesi').html('<div style=""clear: both;""></div> <table class=""table table-striped table-no-bordered table-hover dataTable dtr-inline""> <thead> <tr style=""font-size: 12px !important""> <th>Departman Adı</th> <th>Departman Yetkilisi</th> <th></th> <th></th> </tr> </thead> <tbody>');

                         for(var i = 0; i < data.length; i++)
                         {
                                var html = `<tr style=""font-size: 12px !important"">
                                <td style=""vertical-align: top;"">`+ data[i][""DepartmentName""] + `</td>
                                <td style=""vertical-align: top;"">`+ data[i][""HeadOfDepartmentName""] +`</td>`;

                            html+=""<td><i class='fa fa-edit actionIcon' onclick='prepareDepartmentUpdatePanel(""+data[i][""Id""]+"");' style='float:right; font-size: 18px;'></i></td><td><i class='fa fa-trash actionIcon' onclick='deleteDe");
            WriteLiteral(@"partment(""+data[i][""Id""]+"")' style='font-size: 18px; float:right'></i></td></tr>"";
                            html += '</tbody></table>';
                               $('#divDepartmanListesi table').append(html);



                         }
                               $('#divDepartmanListesi table').DataTable( {
                                    ""language"": {
                                        ""url"": ""http://cdn.datatables.net/plug-ins/1.10.19/i18n/Turkish.json""
                                    },
                                     ""initComplete"": function(settings, json) {
                                            $("".dataTables_wrapper select option"").css(""background-color"", ""#191919"");
                                        }
                                });


               },
               error: function (err) {
                 swal(""HATA!"");
               }
              });
       }

        function getAllPersonList() {
            var returnList ");
            WriteLiteral("= null;\r\n            $.ajax({\r\n                type: \"POST\",\r\n                async: false,\r\n                url: \'");
            EndContext();
            BeginContext(21989, 36, false);
#line 460 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                 Write(Url.Action("GetAllPerson", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(22025, 316, true);
            WriteLiteral(@"',
                data: {},
                success: function (data) {
                    returnList = data;
                }
            });

            return returnList;
        }

       function getAllPerson()
       {
               $.ajax({
               type: ""POST"",
               url: '");
            EndContext();
            BeginContext(22342, 36, false);
#line 474 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                Write(Url.Action("GetAllPerson", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(22378, 2328, true);
            WriteLiteral(@"',
               data: {},
               success: function (data) {

                   $('#divProjeListesi').html('<div style=""clear: both""></div> <table class=""table table-striped table-no-bordered table-hover dataTable dtr-inline""> <thead> <tr style=""font-size: 12px !important""> <th>Ad Soyad</th> <th>E-mail</th> <th>Yetki Durumu</th> <th>Takımı</th> <th></th> <th></th> </tr> </thead> <tbody>');

                         for(var i = 0; i < data.length; i++)
                         {
                                var html = `<tr style=""font-size: 12px !important"">
                             <td style=""vertical-align: top;"">`+data[i][""Name""]+` `+data[i][""Surname""]+`</td>
                             <td style=""vertical-align: top;"">`+data[i][""Email""]+`</td>
                             <td style=""vertical-align: top;"">`+(data[i][""IsAdmin""] == 1 ? ""Admin"" : ""Kullanıcı"")+`</td>
                            <td style=""vertical-align: top;"">`+data[i][""TeamName""]+`</td>`;

                     ");
            WriteLiteral(@"       html+=""<td><i class='fa fa-edit actionIcon' onclick='prepareKullaniciUpdatePanel(""+data[i][""Id""]+"");' style='float:right; font-size: 18px;'></i></td><td><i class='fa fa-trash actionIcon' onclick='deletePerson(""+data[i][""Id""]+"")' style='font-size: 18px; float:right'></i></td></tr>"";
                            html += '</tbody></table>';
                               $('#divProjeListesi table').append(html);



                         }
                               $('#divProjeListesi table').DataTable( {
                                    ""language"": {
                                        ""url"": ""http://cdn.datatables.net/plug-ins/1.10.19/i18n/Turkish.json""
                                    },
                                     ""initComplete"": function(settings, json) {
                                            $("".dataTables_wrapper select option"").css(""background-color"", ""#191919"");
                                        }
                                });


        ");
            WriteLiteral(@"       },
               error: function (err) {
                 swal(""HATA!"");
               }
              });
       }


       function getAllTeam()
       {
           var returnResult;

            $.ajax({
               type: ""POST"",
               url: '");
            EndContext();
            BeginContext(24707, 34, false);
#line 519 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                Write(Url.Action("GetAllTeam", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(24741, 1612, true);
            WriteLiteral(@"',
               async: false,
               data: {},
               success: function (data) {
                   returnResult = data;
               }
            });

            return returnResult;
       }

       function saveUser()
       {
           var userId = $(""#modalUserEkleUserId"").val();
           var name = $(""#modalUserEkleUserName"").val();
           var surname = $(""#modalUserEkleUserSurname"").val();
           var mail = $(""#modalUserEkleUserMail"").val();
           var password = $(""#modalUserEkleUserPassword"").val();
           var teamId = $(""#divKullaniciEkleTeamId select"").val();
           var isAdmin = $(""#isAdmin"").prop(""checked"");

              if(name == """" || name == null)
                {
                    swal(""Ad Boş Geçilemez!"");
                    return;
                }

             if(surname == """" || surname == null)
                {
                    swal("" Soyad Boş Geçilemez!"");
                    return;
              ");
            WriteLiteral(@"  }
             if(mail == """" || mail == null)
                {
                    swal(""Mail Boş Geçilemez!"");
                    return;
                }
            if(password == """" || password == null)
                {
                    swal("" Şifre Boş Geçilemez!"");
                    return;
                }

            if(teamId == """" || teamId == null)
                 {
                      swal('Takım seçiniz...');
                            return;
                 }

           $.ajax({
               type: ""POST"",
               url: '");
            EndContext();
            BeginContext(26354, 34, false);
#line 570 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                Write(Url.Action("SavePerson", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(26388, 1121, true);
            WriteLiteral(@"',
               data: {
                   ""_id"":userId,
                   ""_name"":name,
                   ""_surname"":surname,
                   ""_mail"":mail,
                   ""_password"":password,
                   ""_teamId"": teamId,
                   ""_isAdmin"" : isAdmin
               },
               success: function (data) {
                   if(data)
                   {
                       $(""#kullaniciEkleModal"").modal('hide');
                     getAllPerson();
                       swal('Kullanıcı başarıyla eklendi!');
                   }
               }
            });
       }

        function deletePerson(_personId)
        {
            $.confirm({
                title: 'Uyarı!',
                content: 'Silmek istediğinize emin misiniz?',
                buttons: {
                    confirm: {
                        text: 'Evet',
                        btnClass: 'btn-blue',
                        action: function () {
                  ");
            WriteLiteral("          $.ajax({\r\n                            type: \"POST\",\r\n                            url: \'");
            EndContext();
            BeginContext(27510, 36, false);
#line 603 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                             Write(Url.Action("DeletePerson", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(27546, 1377, true);
            WriteLiteral(@"',
                            data: {
                                ""_personId"": _personId
                            },
                            success: function (data) {
                                if (data) {
                                    getAllPerson();
                                    swal('Kullanıcı başarıyla silindi!');
                                }
                            },
                            error: function (err) {
                                swal(""HATA!"");
                            }
                        });
                        }
                    },
                    cancel: {
                        text: 'İptal',
                        action: function() {
                            return;
                        }
                    },
                }
            });
    }

         function deleteDepartment(_deptId)
         {
             $.confirm({
                title: 'Uyarı!',
                cont");
            WriteLiteral(@"ent: 'Silmek istediğinize emin misiniz?',
                buttons: {
                    confirm: {
                        text: 'Evet',
                        btnClass: 'btn-blue',
                        action: function () {
                            $.ajax({
                             type: ""POST"",
                             url: '");
            EndContext();
            BeginContext(28924, 40, false);
#line 641 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                              Write(Url.Action("DeleteDepartment", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(28964, 2168, true);
            WriteLiteral(@"',
                             data: {
                                 ""_deptId"": _deptId
                             },
                             success: function (data) {
                                 if (data) {
                                     getAllDepartment();
                                     swal('Departman başarıyla silindi!');
                                 }
                             },
                             error: function (err) {
                                 swal(""HATA!"");
                             }
                         });
                        }
                    },
                    cancel: {
                        text: 'İptal',
                        action: function() {
                            return;
                        }
                    },
                }
            });
         }
    </script>
    <!-- Person Ekle Script burada bitiyor -->
    <!-- TEAM  Ekle Script Buradan Başlıyor -->
    <scri");
            WriteLiteral(@"pt>

    function fillAddTeamSelectDepartmentList() {
        var list = getAllDepartmentList();

        $(""#divTakimEkleDepartmentId"").html('<select class=""selectpicker"" data-style=""btn btn-info btn-round"" title=""Departman Seçiniz...""></select>');

        for (var i = 0; i < list.length; i++) {
            $(""#divTakimEkleDepartmentId select"").append('<option value=""' + list[i][""Id""] + '"">' + list[i][""DepartmentName""] + '</option>');
        }

        $("".selectpicker"").selectpicker();
        $("".selectpicker"").selectpicker('refresh');
    }

    function saveDepartman() {
           var deptId = $(""#modalDepartmanEkleDeptId"").val();
           var deptName = $(""#modalDepartmanEkleDeptName"").val();
        var headId = $(""#divDepartmentEkleHeadId select"").val();

           if(deptName == """" || deptName == null)
           {
               swal(""Departman Adı Boş Geçilemez!"");
               return;
        }

        if (headId == """") {
            swal('Lütfen departman yetki");
            WriteLiteral("lisi seçiniz..\');\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
            EndContext();
            BeginContext(31133, 37, false);
#line 704 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
             Write(Url.Action("SaveDepartman", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(31170, 1023, true);
            WriteLiteral(@"',
            data: {
                ""_id"": deptId,
                ""_name"": deptName,
                ""_headOfDepartment"": headId
            },
            success: function (data) {
                if (data) {
                    $(""#DepartmanEkleModal"").modal('hide');
                    getAllDepartment();
                    swal('Departman başarıyla kaydedildi!');
                }
            }
        });
    }

       function saveTeam()
       {
           var teamId = $(""#modalTeamEkleUserId"").val();
           var name = $(""#modalTeamEkleName"").val();
           var departmentId = $(""#divTakimEkleDepartmentId select"").val();

           if(name == """" || name == null)
           {
               swal(""Takım Adı Boş Geçilemez!"");
               return;
           }

           if (departmentId == """") {
               swal('Lütfen departman seçiniz...');
               return;
           }


           $.ajax({
               type: ""POST"",
               url: '");
            EndContext();
            BeginContext(32194, 32, false);
#line 740 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                Write(Url.Action("SaveTeam", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(32226, 703, true);
            WriteLiteral(@"',
               data: {
                   ""_id"": teamId,
                   ""_name"": name,
                   ""_departmentId"": departmentId
               },
               success: function (data) {
                   if(data)
                   {
                       $(""#TeamEkleModal"").modal('hide');
                     getAllTeamSelect();
                       swal('Takım başarıyla kaydedildi!');
                   }
               }
            });
       }


      function prepareTeamUpdatePanel(_teamId)
        {

          fillAddTeamSelectDepartmentList();
            //GetPersonById
            $.ajax({
               type: ""POST"",
               url: '");
            EndContext();
            BeginContext(32930, 35, false);
#line 765 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                Write(Url.Action("GetTeamById", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(32965, 779, true);
            WriteLiteral(@"',
               data: {
                   ""_teamId"": _teamId
               },
               success: function (data) {
                   $(""#modalTeamEkleUserId"").val(data[""Id""]);
                   $(""#modalTeamEkleName"").val(data[""Name""]);
                   $(""#divTakimEkleDepartmentId select"").val(data[""DepartmentId""]);

                   setTimeout(function(){
                        //$("".selectpicker"").selectpicker();
                       $("".selectpicker"").selectpicker('refresh');
                       $(""#TeamEkleModal"").modal('show');
                    }, 200);


               }
            });
        }

        function getAllTeamSelect()
       {
               $.ajax({
               type: ""POST"",
               url: '");
            EndContext();
            BeginContext(33745, 40, false);
#line 789 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                Write(Url.Action("GetAllTeamSelect", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(33785, 2501, true);
            WriteLiteral(@"',
               data: {},
               success: function (data) {

                   $('#divTeamListesi').html('<div style=""clear: both;""></div> <table class=""table table-striped table-no-bordered table-hover dataTable dtr-inline""> <thead> <tr style=""font-size: 12px !important""> <th>#</th> <th>Takım Adı</th> <th>Takım Departmanı</th> <th></th> <th></th> </tr> </thead> <tbody>');

                         for(var i = 0; i < data.length; i++)
                         {
                                var html = `<tr style=""font-size: 12px !important"">
                             <td style=""vertical-align: top;"">`+(i+1)+`</td>
                             <td style=""vertical-align: top;"">`+ data[i][""Name""] + `</td>
                            <td style=""vertical-align: top;"">`+ data[i][""DepartmentName""] +`</td>
`;




                            html+=""<td><i class='fa fa-edit actionIcon' onclick='prepareTeamUpdatePanel(""+data[i][""Id""]+"");' style='float:right; font-size: 18px;'></i></td><t");
            WriteLiteral(@"d><i class='fa fa-trash actionIcon' onclick='deleteTeam(""+data[i][""Id""]+"")' style='font-size: 18px; float:right'></i></td></tr>"";
                            html += '</tbody></table>';
                               $('#divTeamListesi table').append(html);



                         }
                               $('#divTeamListesi table').DataTable( {
                                    ""language"": {
                                        ""url"": ""http://cdn.datatables.net/plug-ins/1.10.19/i18n/Turkish.json""
                                    },
                                     ""initComplete"": function(settings, json) {
                                            $("".dataTables_wrapper select option"").css(""background-color"", ""#191919"");
                                        }
                                });


               },
               error: function (err) {
                 swal(""HATA!"");
               }
              });
       }


         function deleteTea");
            WriteLiteral(@"m(_teamId)
         {
             $.confirm({
                title: 'Uyarı!',
                content: 'Silmek istediğinize emin misiniz?',
                buttons: {
                    confirm: {
                        text: 'Evet',
                        btnClass: 'btn-blue',
                        action: function () {
                            $.ajax({
                           type: ""POST"",
                           url: '");
            EndContext();
            BeginContext(36287, 34, false);
#line 843 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Person\Index.cshtml"
                            Write(Url.Action("DeleteTeam", "Person"));

#line default
#line hidden
            EndContext();
            BeginContext(36321, 6389, true);
            WriteLiteral(@"',
                           data: {
                               ""_teamId"": _teamId
                           },
                           success: function (data) {
                               if(data)
                               {
                                    getAllTeamSelect();
                                   swal('Takım başarıyla silindi!');
                               }
                           },
                           error: function (err) {
                             swal(""HATA!"");
                           }
                          });
                        }
                    },
                    cancel: {
                        text: 'İptal',
                        action: function() {
                            return;
                        }
                    },
                }
            });
            
        }


    </script>
    <style>

        .pure-material-checkbox {
            z-index: 0;
           ");
            WriteLiteral(@" position: relative;
            display: inline-block;
            color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.87);
            font-family: var(--pure-material-font, ""Roboto"", ""Segoe UI"", BlinkMacSystemFont, system-ui, -apple-system);
            font-size: 16px;
            line-height: 1.5;
        }

            /* Input */
            .pure-material-checkbox > input {
                appearance: none;
                -moz-appearance: none;
                -webkit-appearance: none;
                z-index: -1;
                position: absolute;
                left: -10px;
                top: -8px;
                display: block;
                margin: 0;
                border-radius: 50%;
                width: 40px;
                height: 40px;
                background-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
                box-shadow: none;
                outline: none;
                opacity: 0;
                transform: scale(");
            WriteLiteral(@"1);
                pointer-events: none;
                transition: opacity 0.3s, transform 0.2s;
            }

            /* Span */
            .pure-material-checkbox > span {
                display: inline-block;
                width: 100%;
                cursor: pointer;
            }

                /* Box */
                .pure-material-checkbox > span::before {
                    content: """";
                    display: inline-block;
                    box-sizing: border-box;
                    margin: 3px 11px 3px 1px;
                    border: solid 2px; /* Safari */
                    border-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
                    border-radius: 2px;
                    width: 18px;
                    height: 18px;
                    vertical-align: top;
                    transition: border-color 0.2s, background-color 0.2s;
                }

                /* Checkmark */
                .pure-material-ch");
            WriteLiteral(@"eckbox > span::after {
                    content: """";
                    display: block;
                    position: absolute;
                    top: 3px;
                    left: 1px;
                    width: 10px;
                    height: 5px;
                    border: solid 2px transparent;
                    border-right: none;
                    border-top: none;
                    transform: translate(3px, 4px) rotate(-45deg);
                }

            /* Checked, Indeterminate */
            .pure-material-checkbox > input:checked,
            .pure-material-checkbox > input:indeterminate {
                background-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
            }

                .pure-material-checkbox > input:checked + span::before,
                .pure-material-checkbox > input:indeterminate + span::before {
                    border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
                    background-co");
            WriteLiteral(@"lor: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
                }

                .pure-material-checkbox > input:checked + span::after,
                .pure-material-checkbox > input:indeterminate + span::after {
                    border-color: rgb(var(--pure-material-onprimary-rgb, 255, 255, 255));
                }

                .pure-material-checkbox > input:indeterminate + span::after {
                    border-left: none;
                    transform: translate(4px, 3px);
                }

            /* Hover, Focus */
            .pure-material-checkbox:hover > input {
                opacity: 0.04;
            }

            .pure-material-checkbox > input:focus {
                opacity: 0.12;
            }

            .pure-material-checkbox:hover > input:focus {
                opacity: 0.16;
            }

            /* Active */
            .pure-material-checkbox > input:active {
                opacity: 1;
                transform: scale(0)");
            WriteLiteral(@";
                transition: transform 0s, opacity 0s;
            }

                .pure-material-checkbox > input:active + span::before {
                    border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
                }

            .pure-material-checkbox > input:checked:active + span::before {
                border-color: transparent;
                background-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
            }

            /* Disabled */
            .pure-material-checkbox > input:disabled {
                opacity: 0;
            }

                .pure-material-checkbox > input:disabled + span {
                    color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.38);
                    cursor: initial;
                }

                    .pure-material-checkbox > input:disabled + span::before {
                        border-color: currentColor;
                    }

            .pure-material-checkbox > in");
            WriteLiteral("put:checked:disabled + span::before,\r\n            .pure-material-checkbox > input:indeterminate:disabled + span::before {\r\n                border-color: transparent;\r\n                background-color: currentColor;\r\n            }\r\n    </style>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
