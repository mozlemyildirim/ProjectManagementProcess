#pragma checksum "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "69a0e7ee431b4256509a0de9a7a80df930bd7367"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ToDoList_Index), @"mvc.1.0.view", @"/Views/ToDoList/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ToDoList/Index.cshtml", typeof(AspNetCore.Views_ToDoList_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\merve\Desktop\PMP\PMPCore\Views\_ViewImports.cshtml"
using PMPCore;

#line default
#line hidden
#line 2 "C:\Users\merve\Desktop\PMP\PMPCore\Views\_ViewImports.cshtml"
using PMPCore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"69a0e7ee431b4256509a0de9a7a80df930bd7367", @"/Views/ToDoList/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4fb46c8f1508255f860685ecf7a4631592682f6c", @"/Views/_ViewImports.cshtml")]
    public class Views_ToDoList_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
#line 3 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
  
    ViewBag.Title = "Yapılacaklar Listesi";
    ViewBag.ActivePageName = "Yapılacaklar Listesi";

#line default
#line hidden
            BeginContext(110, 2312, true);
            WriteLiteral(@"
<style>



    .customInfoBox {
        transition: all 0.5s;
    }

        .customInfoBox:hover {
            color: #d2d2d2 !important;
        }

    .select2-container--default .select2-results > .select2-results__options {
        background-color: #00bcd4 !important;
    }

    .select2-container--default .select2-results > .select2-results__options {
        background-color: #00bcd4 !important;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #00bcd4;
        border: 1px solid #00bcd4;
        border-radius: 4px;
        cursor: default;
        float: left;
        margin-right: 5px;
        margin-top: 5px;
        padding: 0 5px;
        color: white;
        font-family: sans-serif;
        font-size: 11px;
        border: 1px solid white;
        font-weight: bold;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice__remove {
        color: w");
            WriteLiteral(@"hite;
        cursor: pointer;
        display: inline-block;
        font-weight: bold;
        margin-right: 3px;
        color: white;
        font-size: 15px;
        /* margin-top: 5px; */
        float: left;
        margin-top: -1px;
    }

        .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover {
            color: red !important;
        }

    .select2-container--default.select2-container--focus .select2-selection--multiple {
        border: solid #00bcd4 1.4px !important;
        outline: 0 !important;
        max-height: 50px !important;
        overflow-x: auto !important;
    }

    .ps-scrollbar-y-rail {
        top: 30px !important;
        right: 0px !important;
        height: 900px !important;
    }

    .ps-scrollbar-x-rail {
        left: 0px;
        bottom: -71px;
    }

    .select2-dropdown {
        z-index: 12372832183728327432789 !important;
    }
</style>
<script>
    function showPopup(stepId");
            WriteLiteral(@", boardId, elem)
    {
         if ($(""#handMadeToolTip"").is(':visible'))
            return;

        boardId = $(elem).parent().parent().parent().parent().attr(""id"").replace(""divOuter"", """");

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(2423, 39, false);
#line 93 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetStepHoverInfo", "Board"));

#line default
#line hidden
            EndContext();
            BeginContext(2462, 1831, true);
            WriteLiteral(@"',
            data: {
                ""_stepId"": stepId,
                ""_boardId"": boardId
            },
            success: function (data) {
                var htmlStr = data;

                var rect = elem.getBoundingClientRect();
                var left = rect.left + ""px"";
                var topd = rect.top + ""px"";

                htmlStr = '<div style=""position: absolute; top: ' + topd + '; left: ' + left + '; margin-left: 20px; background-color: rgba(0, 0, 0, 0.6); color: white; z-index: 12438714372393; padding: 10px; border-radius: 10px !important; font-weight: bold; font-size: 12px;"" id=""handMadeToolTip"">' + htmlStr + ""</div>"";
                $(""body"").append(htmlStr);
            }
        });
    }

</script>

<div class=""container-fluid"" id=""divMain"">
    <div class=""row mt-5"">
    </div>
</div>

<div class=""modal fade"" id=""projeEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""moda");
            WriteLiteral(@"l-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info text-center"">
                        <h4 class=""card-title"">Proje Ekle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  proje ekleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(4293, 1316, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8cc73cb5d68943daa47063b2c1124736", async() => {
                BeginContext(4332, 1270, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <div class=""form-group is-empty"">
                                    <input id=""modalGorevEkleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""modalGorevEkleProjeAdi"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Proje adını giriniz."">
                                </div>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <label class=""label-control"">Bitiş Tarihi</label>
                                    <input style=""color:black!important;"" type=""text""
        ");
                WriteLiteral("                                   class=\"form-control datepicker\" id=\"EndDatePicker\" value=\"\" autocomplete=\"off\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5609, 1399, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""savePano()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info te");
            WriteLiteral(@"xt-center"">
                        <h4 class=""card-title"">Görev Ekle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev ekleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(7008, 2151, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30e0ee973a4647f19154633f56d5817a", async() => {
                BeginContext(7047, 702, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <input id=""gorevEkleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""todoName"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(8120, 1032, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""todoEndDate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""divGorevEkleCalisanSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
            ");
                WriteLiteral("        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9159, 1409, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""saveTodo()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevUpdateModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info ");
            WriteLiteral(@"text-center"">
                        <h4 class=""card-title"">Görev Güncelle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev güncelleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(10568, 2754, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eac91b6df691420ab74ee1e7b447f271", async() => {
                BeginContext(10607, 1010, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <div class=""form-group is-empty"">
                                    <label>Başlık</label>
                                    <input id=""gorevGetirTitleUpdate"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                    <input id=""gorevGetirIdUpdate"" type=""text"" class=""form-control"" style=""color: black!important;display:none"" placeholder=""Görev adını giriniz."">
                                </div>
                                <div class=""form-group is-empty"">
                                    <label>Açıklama</label>
                                    <input id=""gorevGetirDetailUpdate"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(11988, 1327, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""gorevGetirEndDateUpdate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""getCalisanUpdateSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div id=""getPreTaskUpdateSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Öncelikli Görev"" style=""width: 100%;""></select>
                            </div>
                         ");
                WriteLiteral(@"   <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13322, 1408, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""updateTask()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevEkleModal2"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info");
            WriteLiteral(@" text-center"">
                        <h4 class=""card-title"">Görev Düzenle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev düzenleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(14730, 2171, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a266d7c3fab042bc91d7c7baaf97632d", async() => {
                BeginContext(14769, 712, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <input id=""gorevDüzenleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""düzenletodoName"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(15852, 1042, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""düzenletodoEndDate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""divGorevDüzenleCalisanSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
  ");
                WriteLiteral("                  ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16901, 1776, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""updateTask()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<button class=""btn btn-info btn-round btn-fab"" rel=""tooltip"" data-placement=""top"" title=""""
        data-original-title=""Yeni Kategori Ekle"" data-toggle=""modal"" data-target=""#kategoriOlusturModal""
        style=""position: fixed; margin-top: -250px; right: 270px;"">
    <i class=""material-icons"">add</i>
</button>
<!-- KATEGORİ EKLE MODAL -->
<div class=""modal fade"" id=""kategoriOlusturModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style=""display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div ");
            WriteLiteral(@"class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button onclick="""" type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>

                    <div class=""header header-info text-center"">
                        <h4 class=""card-title"">Kategori Oluştur</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan
                            kategori oluşturabilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-3 ml-0"">
                    ");
            EndContext();
            BeginContext(18677, 816, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8c3e038cc00f48a2af53a516555aad6f", async() => {
                BeginContext(18716, 770, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <input id=""modalKategriEkleProjeId"" value=""0"" style=""display: none;"" />
                                    <input id=""kategoriTitle"" type=""text"" class=""form-control"" style=""color:black!important;"" placeholder=""Kategori adını giriniz."">
                                </div>
                            </div>
                        </div>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(19493, 1431, true);
            WriteLiteral(@"
                </div>

                <div class=""modal-footer text-center m-5 my-auto py-4"" style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""saveKategori()"" class=""btn btn-info btn-round""><i class=""material-icons"">save_alt</i> Kaydet</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- KATEGORİ EKLE MODAL bitiş -->
<!-- KATEGORİ EKLE2 MODAL -->
<div class=""modal fade"" id=""kategoriOlusturModal2"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style=""display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button onclick="""" type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>

                    <div class=""header header-info text-cent");
            WriteLiteral(@"er"">
                        <h4 class=""card-title"">Kategori Oluştur</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan
                            kategori oluşturabilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-3 ml-0"">
                    ");
            EndContext();
            BeginContext(20924, 825, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc22babc504f45f8b68d7dee4589451e", async() => {
                BeginContext(20963, 779, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <input id=""modalKategriDüzenleProjeId"" value=""0"" style=""display: none;"" />
                                    <input id=""updateKategoriTitle"" type=""text"" class=""form-control"" style=""color:black!important;"" placeholder=""Kategori adını giriniz."">
                                </div>
                            </div>
                        </div>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(21749, 1382, true);
            WriteLiteral(@"
                </div>

                <div class=""modal-footer text-center m-5 my-auto py-4"" style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""updateKategori()"" class=""btn btn-info btn-round""><i class=""material-icons"">save_alt</i> Kaydet</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- KATEGORİ EKLE2 MODAL bitiş -->
<div class=""modal fade"" id=""kategoriGorevEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info text-center"">
    ");
            WriteLiteral(@"                    <h4 class=""card-title"">Görev Ekle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev ekleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(23131, 2185, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1bd54fa854c54ff5b9c0a9f6cd5ce775", async() => {
                BeginContext(23170, 719, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <input id=""kategoriGorevEkleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""kategoriGorevName"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(24260, 1049, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""kategoriGorevEndDate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""divKategoriGorevEkleCalisanSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </d");
                WriteLiteral("iv>\r\n                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(25316, 5877, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""savekategoriGorev()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .swal2-container {
        z-index: 99999999999999999999999999999999999999999999999999999999999999999 !important;
    }

    .pure-material-checkbox {
        z-index: 0;
        position: relative;
        display: inline-block;
        color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.87);
        font-family: var(--pure-material-font, ""Roboto"", ""Segoe UI"", BlinkMacSystemFont, system-ui, -apple-system);
        font-size: 16px;
        line-height: 1.5;
    }

        /* Input */
        .pure-material-checkbox > input {
            appearance: ");
            WriteLiteral(@"none;
            -moz-appearance: none;
            -webkit-appearance: none;
            z-index: -1;
            position: absolute;
            left: -10px;
            top: -8px;
            display: block;
            margin: 0;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            background-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
            box-shadow: none;
            outline: none;
            opacity: 0;
            transform: scale(1);
            pointer-events: none;
            transition: opacity 0.3s, transform 0.2s;
        }

        /* Span */
        .pure-material-checkbox > span {
            display: inline-block;
            width: 100%;
            cursor: pointer;
        }

            /* Box */
            .pure-material-checkbox > span::before {
                content: """";
                display: inline-block;
                box-sizing: border-box;
                margin: 3px 11p");
            WriteLiteral(@"x 3px 1px;
                border: solid 2px; /* Safari */
                border-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
                border-radius: 2px;
                width: 18px;
                height: 18px;
                vertical-align: top;
                transition: border-color 0.2s, background-color 0.2s;
            }

            /* Checkmark */
            .pure-material-checkbox > span::after {
                content: """";
                display: block;
                position: absolute;
                top: 3px;
                left: 1px;
                width: 10px;
                height: 5px;
                border: solid 2px transparent;
                border-right: none;
                border-top: none;
                transform: translate(3px, 4px) rotate(-45deg);
            }

        /* Checked, Indeterminate */
        .pure-material-checkbox > input:checked,
        .pure-material-checkbox > input:indeterminate {
         ");
            WriteLiteral(@"   background-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
        }

            .pure-material-checkbox > input:checked + span::before,
            .pure-material-checkbox > input:indeterminate + span::before {
                border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
                background-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
            }

            .pure-material-checkbox > input:checked + span::after,
            .pure-material-checkbox > input:indeterminate + span::after {
                border-color: rgb(var(--pure-material-onprimary-rgb, 255, 255, 255));
            }

            .pure-material-checkbox > input:indeterminate + span::after {
                border-left: none;
                transform: translate(4px, 3px);
            }

        /* Hover, Focus */
        .pure-material-checkbox:hover > input {
            opacity: 0.04;
        }

        .pure-material-checkbox > input:focus {
           ");
            WriteLiteral(@" opacity: 0.12;
        }

        .pure-material-checkbox:hover > input:focus {
            opacity: 0.16;
        }

        /* Active */
        .pure-material-checkbox > input:active {
            opacity: 1;
            transform: scale(0);
            transition: transform 0s, opacity 0s;
        }

            .pure-material-checkbox > input:active + span::before {
                border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
            }

        .pure-material-checkbox > input:checked:active + span::before {
            border-color: transparent;
            background-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
        }

        /* Disabled */
        .pure-material-checkbox > input:disabled {
            opacity: 0;
        }

            .pure-material-checkbox > input:disabled + span {
                color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.38);
                cursor: initial;
            }

           ");
            WriteLiteral(@"     .pure-material-checkbox > input:disabled + span::before {
                    border-color: currentColor;
                }

        .pure-material-checkbox > input:checked:disabled + span::before,
        .pure-material-checkbox > input:indeterminate:disabled + span::before {
            border-color: transparent;
            background-color: currentColor;
        }
</style>
<script>
    var selectedToProjectId = 0;
    function Dropped(event, ui){
      $("".draggable"").each(function(){
        //My Logic goes here

      });

    }

    $(document).ready(function(){
        fillPano();
        getCategories();
    });
    function kategoriDüzenle(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(31194, 46, false);
#line 659 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetCategoryNameandId", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(31240, 510, true);
            WriteLiteral(@"',
            data: {
                ""_id"":id
            },
            success: function (data) {
                $('#kategoriOlusturModal2').modal('show');
                $('#updateKategoriTitle').val(data[0].Name);
                $('#modalKategriDüzenleProjeId').val(data[0].Id);
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function deleteKategori(id) {
    $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(31751, 40, false);
#line 676 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("DeleteCategory", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(31791, 359, true);
            WriteLiteral(@"',
            data: {
                ""_id"":id
            },
            success: function (data) {
                swal('silindi!');
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }

    function getCategories() {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(32151, 39, false);
#line 692 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetCategories", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(32190, 3092, true);
            WriteLiteral(@"',
            data: {},
            async: false,
            success: function (data) {
                console.log(""birinci"", data);
                for (var i = 0; i < data.length; i++) {

                    projects = `<div class=""customBoard col-md-3  id=""customerBoardColor` + [i] + `"""">
                                <div class=""card"" style=""background: #486d89; color: white; box-shadow: 0px 0px 4px 1px #46464696; border-radius: 5px; min-height: 60vh; height: 100%;"" data-count=""8"">
                                    <div class=""card-header text-center"" data-background-color=""blue"" data-header-animation=""true"">
                                        <h4 class=""my-4"">
                                            <b style=""color:white;"">` + (data[i][""Name""]) + `</b>
                                        </h4>
                                    </div>
                                    <div class=""card-actions"" style=""padding-top: 60px;"">
                                        <butto");
            WriteLiteral(@"n type=""button"" class=""btn btn-danger btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Kaldır"" style=""width: 0% !important;"">
                                            <i onclick=""deleteKategori(` + (data[i][""Id""]) + `)"" class=""deleteBtn material-icons"">delete</i>
                                        </button>
                                        <button type=""button"" class=""btn btn-info btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Düzenle"" style=""width: 0% !important;"">
                                            <i onclick=""selectedToProjectId = ` + (data[i][""ProjectId""]) + `; kategoriDüzenle(` + (data[i][""Id""]) + `)"" class=""material-icons"">edit</i>
                                        </button>
                                        <button type=""button"" class=""btn btn-info btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Ekle"" style=""width: 0% !important;"">
                                  ");
            WriteLiteral(@"          <i onclick=""selectedToProjectId = ` + (data[i][""ProjectId""]) + `; gorevEkleKategori(` + (data[i][""Id""]) + `)"" class=""material-icons"">add</i>
                                        </button>
                                    </div>
                                    <div id=""divOuter` + (data[i][""Id""]) + `"" class=""droppable card-content px-0"" style=""height: 699px; padding-top:40px !important; overflow-y: auto; overflow-x: hidden;"">

                                    </div>
                                </div>
                            </div>`;

                    $('#divMain .row').first().append(projects);
                }

                var projects = $("".customBoard"");
                for (var i = 0; i < projects.length; i++) {
                    $(projects[i]).find(""hr"").last().remove()
                }



            },
            error: function (err) {
                swal(""hata!"");
            }
        });

        $.ajax({
            type: ""POST"",");
            WriteLiteral("\r\n            url: \'");
            EndContext();
            BeginContext(35283, 53, false);
#line 741 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetDetailTaskWithCategory", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(35336, 4379, true);
            WriteLiteral(@"',
            data: {},
            async: false,
            success: function (data) {
                console.log(""ikinci"", data);
                for (var i = 0; i < data.length; i++) {
                    var calisanKullanicilar = data[i][""Persons""];

                    var html = """";
                    for (var k = 0; k < calisanKullanicilar.length; k++) {
                        var calisanlar = '<span style=""display: inline-block; background-color: #049cac; border: 1px solid #ffffff29;"" class=""label label-danger my-2 mx-1"">' + calisanKullanicilar[k].Name + "" "" + calisanKullanicilar[k].Surname + '</span>';
                        html += calisanlar;
                    }

                    var stepHtml = `<div class=""draggable px-3 pt-5"" id=""divBoardGorevler` + data[i][""CategoryId""] + `"">
                                        <div class=""card"" style=""background: #7b9fb9; color: white; box-shadow: 0px 0px 4px -1px #ffffff63; border-radius: 5px;"">
                                  ");
            WriteLiteral(@"          <div style=""width: 100%;"">
                                                <button type=""button"" class=""btn btn-danger btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Kaldır"">
                                                <i onclick=""deleteToDo(` + (data[i][""Id""]) + `)"" class=""deleteBtn material-icons"">delete</i>
                                                </button>
                                               <button type=""button"" class=""btn btn-info btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Düzenle"">
                                                <i onclick='updateTaskModal(`+ data[i][""Id""] + `)' class=""material-icons"">edit</i>
                                                <div class=""ripple-container""></div></button>
                                            </div>
                                            <div style=""clear: both;""></div>
                                            <div class=""card-heade");
            WriteLiteral(@"r card-header-icon"" data-background-color=""white"" style=""background:#19b6c9; padding: 0px; padding-left: 10px; padding-righT: 10px; margin-top: 18px;"">
                                                <h4>
                                                    <small style=""color: white; font-weight: bold; "">
                                                         ` + data[i][""Title""] + `
                                                    </small>
                                                </h4>
                                            </div>
                                            <div class=""card-content"" style=""margin-top:60px;"">
                                                <h5 class=""card-title"" style=""color:white;"">Bitiş Tarihi ` + data[i][""StrDate""] + `</h5>
                                                <input type=""checkbox"" name="""" value=""""> Checklists <br>
                                                <input type=""text"" style=""display:none;"" id=""todoIdForUpdate""  name="""" va");
            WriteLiteral(@"lue=""` + data[i][""Id""] + `""><br>
                                                <input type=""file"" id=""fileUploader"" name=""fileUploader"" accept="".xls, .xlsx"" style=""display:none;"" />
                                                <button onclick=""$('#fileUploader').click()"" class=""btn btn-secondary"" style=""background-color: #7fffd400;""><i class=""fa fa-plus fa-lg""></i> Dosya Ekle</button>
                                            </div>
                                            <div class=""card-footer"">
                                                <div class=""stats py-2"">` + html + `
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <hr style=""width: 90%; margin: 0px; padding: 0px; margin-left: 5%; border: 0.5px solid #c0c0c05c; "">`;

                    $(""#divOuter"" + data[i][""CategoryId""]).append(stepHtml);");
            WriteLiteral(@"
                }
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function saveKategori() {
        var name = $('#kategoriTitle').val();

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(39716, 38, false);
#line 801 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("SaveKategori", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(39754, 525, true);
            WriteLiteral(@"',
            data: {
                ""_name"":name
            },
            success: function (data) {
                swal(""kayıt başarılı!"");
                window.location.reload();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }

    function updateKategori() {
        var name = $('#updateKategoriTitle').val();
        var id = $('#modalKategriDüzenleProjeId').val();
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(40280, 40, false);
#line 820 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("UpdateKategori", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(40320, 438, true);
            WriteLiteral(@"',
            data: {
                ""_name"": name,
                 ""_id"":id
            },
            success: function (data) {
                swal(""düzenlendi!"");
               window.location.reload();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }

    function gorevEkleModal() {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(40759, 40, false);
#line 838 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetAllToDoUser", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(40799, 893, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    //$(""#divGorevEkleCalisanSecSelect select option[value='"" + data[i][""Id""] + ""']"").attr(""selected"", ""selected"");
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#divGorevEkleCalisanSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
        $('#gorevEkleModal').modal('show');
    }

    function gorevEkleKategori(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(41693, 40, false);
#line 861 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetAllToDoUser", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(41733, 1219, true);
            WriteLiteral(@"',
            data: {

            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    //$(""#divGorevEkleCalisanSecSelect select option[value='"" + data[i][""Id""] + ""']"").attr(""selected"", ""selected"");
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#divKategoriGorevEkleCalisanSecSelect select"").html(html);
                $(""#kategoriGorevEkleProjeId"").val(id);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
        $('#kategoriGorevEkleModal').modal('show');
    }


    function savekategoriGorev(id) {
        var catId = $('#kategoriGorevEkleProjeId').val();
        var todoName = $('#kategoriGorevName').val();
   ");
            WriteLiteral("     var todoEndDate = $(\'#kategoriGorevEndDate\').val();\r\n        var todoUsers = $(\'#divGorevEkleCalisanSecSelect select\').val();\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
            EndContext();
            BeginContext(42953, 42, false);
#line 891 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("SaveCategoryStep", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(42995, 655, true);
            WriteLiteral(@"',
            data: {
                ""_catId"": catId,
                ""_projectId"": selectedToProjectId,
                ""_todoName"": todoName,
                ""_todoEndDate"": todoEndDate,
                ""_todoUsers"":todoUsers
            },
            success: function (data) {
                $('#gorevEkleModal2').modal('hide');
                swal(""kayıt başarılı!"");
                window.location.reload();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }

    function gorevEkleKategori(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(43651, 40, false);
#line 913 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetAllToDoUser", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(43691, 966, true);
            WriteLiteral(@"',
            data: {

            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    //$(""#divGorevEkleCalisanSecSelect select option[value='"" + data[i][""Id""] + ""']"").attr(""selected"", ""selected"");
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#divKategoriGorevEkleCalisanSecSelect select"").html(html);
                $(""#kategoriGorevEkleProjeId"").val(id);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
        $('#kategoriGorevEkleModal').modal('show');
    }

    function gorevEkleModal2(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(44658, 40, false);
#line 938 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetAllToDoUser", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(44698, 774, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    //$(""#divGorevEkleCalisanSecSelect select option[value='"" + data[i][""Id""] + ""']"").attr(""selected"", ""selected"");
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#divGorevDüzenleCalisanSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(45473, 37, false);
#line 957 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetToDoById", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(45510, 955, true);
            WriteLiteral(@"',
            data: {
                ""_todoId"": id
            },
            success: function (data) {

                var persons = data[0].Persons;

                for (var i = 0; i < persons.length; i++) {
                    $(""#divGorevDüzenleCalisanSecSelect select option[value='"" + persons[i].Id + ""']"").attr(""selected"", ""selected"");
                }

                $('#düzenletodoEndDate').val(data[0].StrDate);
                $('#düzenletodoName').val(data[0].Detail);
                $('#düzenletodoId').val(data[0].Id);

                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {

            }
        });

        $('#gorevEkleModal2').modal('show');
    }

    function fillPano() {
        $('#divMain').html('<div class=""row mt-5""></div>');

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(46466, 51, false);
#line 989 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetAllDetailTaskProject", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(46517, 3050, true);
            WriteLiteral(@"',
            data: {},
            async: false,
            success: function (data) {
                console.log(""birinci"", data);
                for (var i = 0; i < data.length; i++) {

                    projects = `<div class=""customBoard col-md-3  id=""customerBoardColor` + [i] + `"""">
                                <div class=""card"" style=""background: #486d89; color: white; box-shadow: 0px 0px 4px 1px #46464696; border-radius: 5px; min-height: 60vh; height: 100%;"" data-count=""8"">
                                    <div class=""card-header text-center"" data-background-color=""blue"" data-header-animation=""true"">
                                        <h4 class=""my-4"">
                                            <b style=""color:white;"">` + (data[i][""Name""]) + `</b>
                                        </h4>
                                    </div>
                                    <div class=""card-actions"" style=""padding-top: 60px;"">
                                        <butto");
            WriteLiteral(@"n type=""button"" class=""btn btn-danger btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Kaldır"" style=""width: 0% !important;"">
                                            <i onclick=""deletePano(` + (data[i][""Id""]) + `)"" class=""deleteBtn material-icons"">delete</i>
                                        </button>
                                        <button type=""button"" class=""btn btn-info btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Düzenle"" style=""width: 0% !important;"">
                                            <i onclick=""selectedToProjectId = ` + (data[i][""Id""]) + `; gorevEkleModal(` + (data[i][""Id""]) + `)"" class=""material-icons"">edit</i>
                                        </button>
                                        <button type=""button"" class=""btn btn-info btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Ekle"" style=""width: 0% !important;"">
                                            <i");
            WriteLiteral(@" onclick=""selectedToProjectId = ` + (data[i][""Id""]) + `; gorevEkleModal(` + (data[i][""Id""]) + `)"" class=""material-icons"">add</i>
                                        </button>
                                    </div>
                                    <div id=""divOuter0"" class=""droppable card-content px-0"" style=""height: 699px; padding-top:40px !important; overflow-y: auto; overflow-x: hidden;"">

                                    </div>
                                </div>
                            </div>`;

                    $('#divMain .row').first().append(projects);
                }

                var projects = $("".customBoard"");
                for (var i = 0; i < projects.length; i++) {
                    $(projects[i]).find(""hr"").last().remove()
                }



            },
            error: function (err) {
                swal(""hata!"");
            }
        });


        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(49568, 52, false);
#line 1039 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetDetailTaskWithProject", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(49620, 4490, true);
            WriteLiteral(@"',
            data: {},
            async: false,
            success: function (data) {
                console.log(""ikinci"", data);
                for (var i = 0; i < data.length; i++) {
                    var calisanKullanicilar = data[i][""Persons""];

                    var html = """";
                    for (var k = 0; k < calisanKullanicilar.length; k++) {
                        var calisanlar = '<span style=""display: inline-block; background-color: #049cac; border: 1px solid #ffffff29;"" class=""label label-danger my-2 mx-1"">' + calisanKullanicilar[k].Name + "" "" + calisanKullanicilar[k].Surname + '</span>';
                        html += calisanlar;
                    }

                    var stepHtml = `<div class=""draggable px-3 pt-5"" id=""divBoardGorevler` + data[i][""Id""] + `"">
                                        <div class=""card"" style=""background: #7b9fb9; color: white; box-shadow: 0px 0px 4px -1px #ffffff63; border-radius: 5px;"">
                                          ");
            WriteLiteral(@"  <div style=""width: 100%;"">
                                                <button type=""button"" class=""btn btn-danger btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Kaldır"">
                                                <i onclick=""deleteToDo(` + (data[i][""Id""]) + `)"" class=""deleteBtn material-icons"">delete</i>
                                                </button>
                                               <button type=""button"" class=""btn btn-info btn-simple"" rel=""tooltip"" data-placement=""bottom"" title="""" data-original-title=""Düzenle"">
                                                <i onclick='updateTaskModal(`+ data[i][""Id""] + `)' class=""material-icons"">edit</i>
                                                <div class=""ripple-container""></div></button>
                                            </div>
                                            <div style=""clear: both;""></div>
                                            <div class=""card-header card-h");
            WriteLiteral(@"eader-icon"" data-background-color=""white"" style=""background:#19b6c9; padding: 0px; padding-left: 10px; padding-righT: 10px; margin-top: 18px;"">
                                                <h4>
                                                    <small style=""color: white; font-weight: bold; "">
                                                         ` + data[i][""Title""] + `
                                                    </small>
                                                </h4>
                                            </div>
                                            <div class=""card-content"" style=""margin-top:60px;"">
                                                <h5 class=""card-title"" style=""color:white;"">Bitiş Tarihi ` + data[i][""StrDate""] + `</h5>
                                                <input type=""checkbox"" name="""" value=""""> Checklists <br>
                                                <input type=""text"" style=""display:none;"" id=""todoIdForUpdate""  name="""" value=""` +");
            WriteLiteral(@" data[i][""Id""] + `""><br>
                                                <input type=""file"" id=""fileUploader"" name=""fileUploader"" accept="".xls, .xlsx"" style=""display:none;"" />
                                                <button onclick=""$('#fileUploader').click()"" class=""btn btn-secondary"" style=""background-color: #7fffd400;""><i class=""fa fa-plus fa-lg""></i> Dosya Ekle</button>
                                            </div>
                                            <div class=""card-footer"">
                                                <div class=""stats py-2"">` + html + `
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <hr style=""width: 90%; margin: 0px; padding: 0px; margin-left: 5%; border: 0.5px solid #c0c0c05c; "">`;

                    $(""#divOuter"" + data[i][""CategoryId""]).append(stepHtml);
       ");
            WriteLiteral(@"         }
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function saveTodo() {
        var todoName = $('#todoName').val();
        var todoEndDate = $('#todoEndDate').val();
        var todoUsers = $('#divGorevEkleCalisanSecSelect select').val();
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(54111, 34, false);
#line 1100 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("SaveToDo", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(54145, 853, true);
            WriteLiteral(@"',
            data: {
                ""_projectId"": selectedToProjectId,
                ""_todoName"": todoName,
                ""_todoEndDate"": todoEndDate,
                ""_todoUsers"":todoUsers
            },
            success: function (data) {
                $('#gorevEkleModal2').modal('hide');
                swal(""kayıt başarılı!"");
                fillPano(); getCategories();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function updateTodo() {
        var todoName = $('#düzenletodoName').val();
        var todoEndDate = $('#düzenletodoEndDate').val();
        var todoId = $('#todoIdForUpdate').val();
        var todoUsers = $('#divGorevDüzenleCalisanSecSelect select').val();
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(54999, 36, false);
#line 1124 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("UpdateToDo", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(55035, 651, true);
            WriteLiteral(@"',
            data: {
                ""_projectId"": selectedToProjectId,
                ""_todoId"": todoId,
                ""_todoName"": todoName,
                ""_todoEndDate"": todoEndDate,
                ""_todoUsers"":todoUsers
            },
            success: function (data) {
                $('#gorevEkleModal2').modal('hide');
                swal(""kayıt başarılı!"");
                fillPano(); getCategories();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function deleteToDo(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(55687, 42, false);
#line 1145 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("DeleteQuickTask", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(55729, 782, true);
            WriteLiteral(@"',
            data: {
                ""_todoId"": id
            },
            success: function (data) {
                swal(""silindi!"");
                fillPano();
                getCategories();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }

    function updateTask() {
        var title = $('#gorevGetirTitleUpdate').val();
        var detail = $('#gorevGetirDetailUpdate').val();
        var EndDate = $('#gorevGetirEndDateUpdate').val();
        var Id = $('#gorevGetirIdUpdate').val();
        var Users = $('#getCalisanUpdateSecSelect select').val();
        var Tasks = $('#getPreTaskUpdateSecSelect select').val();
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(56512, 38, false);
#line 1169 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("UpdateTask", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(56550, 659, true);
            WriteLiteral(@"',
            data: {
                ""_todoId"": Id,
                ""_todoTitle"": title,
                ""_todoDetail"": detail,
                ""_todoEndDate"": EndDate,
                ""_todoUsers"":Users,
                ""_todoTasks"":Tasks
            },
            success: function (data) {
                swal(""güncelleme başarılı!"");
                 $('#gorevUpdateModal').modal('hide');
                fillPano();

            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function updateTaskModal(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(57210, 55, false);
#line 1192 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetAllDetailTaskByProjectId", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(57265, 1295, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                console.log(data);
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Title""]+'</option>';
                }
                $(""#getPreTaskUpdateSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });
       /* $.ajax({
            type: ""POST"",
            url:
          /*  data: {
                ""_taskId"":id
            },
            success: function (data) {
                var html = """";
                if (data[0].[""PreTaskId""] != 0) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#getPreTaskSecSelect ");
            WriteLiteral(@"select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });*/
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(58561, 40, false);
#line 1228 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetAllToDoUser", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(58601, 633, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#getCalisanUpdateSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(59235, 43, false);
#line 1245 "C:\Users\merve\Desktop\PMP\PMPCore\Views\ToDoList\Index.cshtml"
             Write(Url.Action("GetQuickTaskById", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(59278, 949, true);
            WriteLiteral(@"',
            data: {
                ""_taskId"": id
            },
            success: function (data) {
                debugger;
                for (var i = 0; i < data[0].Persons.length; i++) {
                    $(""#getCalisanUpdateSecSelect select option[value='"" + data[0].Persons[i].Id + ""']"").attr(""selected"", ""selected"");
                }
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
                console.log(data);
                $('#gorevGetirIdUpdate').val(data[0].Id);
                $('#gorevGetirTitleUpdate').val(data[0].Title);
                $('#gorevGetirDetailUpdate').val(data[0].Detail);
                $('#gorevGetirEndDateUpdate').val(data[0].StrDate);

                $('#gorevUpdateModal').modal('show');
            },
            error: function (err) {
                swal(""hata!"");
            }
        });

    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
