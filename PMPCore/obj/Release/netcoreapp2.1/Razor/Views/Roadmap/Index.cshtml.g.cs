#pragma checksum "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "89086c78826a345655a4f4d32b8f2da97e4a544a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Roadmap_Index), @"mvc.1.0.view", @"/Views/Roadmap/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Roadmap/Index.cshtml", typeof(AspNetCore.Views_Roadmap_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\merve\Desktop\PMP\PMPCore\Views\_ViewImports.cshtml"
using PMPCore;

#line default
#line hidden
#line 2 "C:\Users\merve\Desktop\PMP\PMPCore\Views\_ViewImports.cshtml"
using PMPCore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"89086c78826a345655a4f4d32b8f2da97e4a544a", @"/Views/Roadmap/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4fb46c8f1508255f860685ecf7a4631592682f6c", @"/Views/_ViewImports.cshtml")]
    public class Views_Roadmap_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<DateTime>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/OfflineScripts/core.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/OfflineScripts/charts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/OfflineScripts/animated.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
  
    ViewBag.Title = "Yol Haritası";
    ViewBag.ActivePageName = "Yol Haritası";

#line default
#line hidden
            BeginContext(113, 1464, true);
            WriteLiteral(@"
<style>

    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        left: 40px;
        top: -180px;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        s
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 70%; /* Could be more or less, depending on screen size */
    }

    /* The Close Button */
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer");
            WriteLiteral(@";
        }

    .actionIcon:hover {
        cursor: pointer;
    }
</style>
<!-- <button id=""btnMilestoneEkleModal"" onclick=""$('#modalMilestoneEkle').show(); getAllProject();"">Milestone Ekle</button> -->

<script>
    $(document).ready(function () {
                GetProjectPercentage();
        getMilestoneInfo();

    });

    function getAllProject() {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(1578, 39, false);
#line 62 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
             Write(Url.Action("GetAllProjeler", "Project"));

#line default
#line hidden
            EndContext();
            BeginContext(1617, 606, true);
            WriteLiteral(@"',
            data: {},
            dataType: 'json',
            async: false,
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    var html = `<option value=""` + data[i][""Id""] + `"">` + data[i][""Name""] + `</option>`;

                    $(""#divMilestoneEkleSelect select"").append(html);
                }

            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function GetProjectPercentage() {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(2224, 45, false);
#line 83 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
             Write(Url.Action("GetProjectPercentage", "Roadmap"));

#line default
#line hidden
            EndContext();
            BeginContext(2269, 774, true);
            WriteLiteral(@"',
            data: {
            },
            dataType: 'json',
            success: function (data) {
                $(""#projectPerId"").html(""Proje Yüzdesi: "" + data + ""%"");
                $(""#projectPerId"").fadeIn(300);
            },
            error: function (err) {
            }
        });
    }

    function saveMilestone() {

        var titleMilestone = $(""#titleMilestone"").val();
        var startDate = $(""#StartDatePicker1"").val();
        var endDate = $(""#EndDatePicker1"").val();
        var description = $(""#MileDescription"").val();
        var projectID = $(""#divMilestoneEkleSelect select"").val();
        var milestoneId = $(""#modalProjeEkleProjeId"").val();

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(3044, 38, false);
#line 107 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
             Write(Url.Action("SaveMilestone", "Roadmap"));

#line default
#line hidden
            EndContext();
            BeginContext(3082, 530, true);
            WriteLiteral(@"',
            data: {
                ""_titleMilestone"": titleMilestone,
                ""_endDate"": endDate,
                ""_startDate"": startDate,
                ""_description"": description,
                ""_projectID"": projectID,
                ""_milestoneId"": milestoneId

            },
            success: function (data) {
                swal(""BAŞARILI!"");
                $(""#modalProjeEkleProjeId"").val('0');
                $(""#titleMilestone"").val('');
                $(""#StartDatePicker1"").val('");
            EndContext();
            BeginContext(3613, 69, false);
#line 121 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
                                       Write(DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/"));

#line default
#line hidden
            EndContext();
            BeginContext(3682, 47, true);
            WriteLiteral("\');\r\n                $(\"#EndDatePicker1\").val(\'");
            EndContext();
            BeginContext(3730, 69, false);
#line 122 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
                                     Write(DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/"));

#line default
#line hidden
            EndContext();
            BeginContext(3799, 294, true);
            WriteLiteral(@"');
                $(""#MileDescription"").val('');
            },
            error: function (err) {
                swal(""Milestone kaydedilemedi!"");
            }
        });

    }

    function getMilestoneInfo() {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(4094, 41, false);
#line 135 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
             Write(Url.Action("GetMilestoneInfo", "Roadmap"));

#line default
#line hidden
            EndContext();
            BeginContext(4135, 6940, true);
            WriteLiteral(@"',
            data: {},
            dataType: 'json',
            async: false,
            success: function (data) {

                am4core.useTheme(am4themes_animated);
                // Themes end

                var chart = am4core.create(""chartdiv"", am4charts.XYChart);

                //var resultData = Json.parse(data);
                var insert = [];

                for (var i = 0; i < data.length; i++) {
                    var startDate = data[i][""StartDate""].split(""T"")[0];
                    var endDate = data[i][""EndDate""].split(""T"")[0];
                    var percent = data[i][""FinishPercent""];


                    var totalTaskDay = days_between(startDate, endDate);

                    var totalSpentDay = percent == 0 ? 0 : (totalTaskDay / 100) * percent;
                    var newDate = addDays(startDate, parseInt(totalSpentDay));

                    insert.push({ ""category"": data[i][""MilestoneName""], ""start"": startDate, ""end"": endDate, ""color"": '#35dff4',");
            WriteLiteral(@" ""task"": data[i][""MilestoneName""] + ""\nBaşlangıç: "" + getTRDateFormat(startDate) + ""\nBitiş: "" + getTRDateFormat(endDate) });

                    if (percent == 100) {
                        insert.push({ ""category"": data[i][""MilestoneName""], ""start"": startDate, ""end"": endDate, ""color"": '#039aad', ""task"": ""%"" + percent + "" tamamlandı."" });
                    }
                    else
                        insert.push({ ""category"": data[i][""MilestoneName""], ""start"": startDate, ""end"": percent == 0 ? startDate : newDate, ""color"": '#039aad', ""task"": ""%"" + percent + "" tamamlandı."" });

                    var delayedStepList = data[i][""DelayedTaskList""];

                    for (var k = 0; k < delayedStepList.length; k++) {
                        var xStartDate = delayedStepList[k][""StartDate""].split(""T"")[0];
                        var xEndDate = delayedStepList[k][""EndDate""].split(""T"")[0];
                        insert.push({ ""category"": data[i][""MilestoneName""], ""start"": xStartDate, ""end"":");
            WriteLiteral(@" xEndDate, ""color"": 'rgba(193, 0, 0, 1)', ""task"": delayedStepList[k][""Name""] + "" isimli görev "" + (days_between(xStartDate, xEndDate) + 1) + "" gün gecikti."" });
                    }

                }

                chart.data = insert;


                var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                categoryAxis.dataFields.category = ""category"";
                categoryAxis.renderer.grid.template.location = 0;
                categoryAxis.renderer.minGridDistance = 1;

                var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
                dateAxis.baseInterval = { count: 1, timeUnit: ""day"" };
                var series1 = chart.series.push(new am4charts.ColumnSeries());
                series1.columns.template.width = am4core.percent(80);
                series1.columns.template.tooltipText = ""[bold]{task}"";

                series1.dataFields.openDateX = ""start"";
                series1.dataFields.dateX = ""end"";
                ");
            WriteLiteral(@"series1.dataFields.categoryY = ""category"";
                series1.columns.template.propertyFields.fill = ""color""; // get color from data
                series1.columns.template.propertyFields.stroke = ""color"";
                series1.columns.template.strokeOpacity = 1;

                chart.scrollbarX = new am4core.Scrollbar();
                var cellSize = 20;
                chart.events.on(""datavalidated"", function (ev) {

                    // Get objects of interest
                    var chart = ev.target;
                    var categoryAxis = chart.yAxes.getIndex(0);

                    // Calculate how we need to adjust chart height
                    var adjustHeight = chart.data.length * cellSize - categoryAxis.pixelHeight;

                    // get current chart height
                    var targetHeight = chart.pixelHeight + adjustHeight;

                    // Set it on chart's container
                    chart.svgContainer.htmlElement.style.height = targetHeigh");
            WriteLiteral(@"t + ""px"";
                });

                chart.events.on(""track"", function (ev) {

                    $(""tspan"").removeAttr(""fill"").attr(""fill"", ""white"");
                    var gler = $(""g"");

                    for (var i = 0; i < gler.length; i++) {
                        var stroke = $(gler[i]).attr(""stroke"");
                        var fill = $(gler[i]).attr(""fill"");

                        if (stroke != null && fill == ""none"") {
                            $(gler[i]).removeAttr(""stroke"").attr(""stroke"", ""silver"");
                            $(gler[i]).removeAttr(""stroke-opacity"").attr(""stroke-opacity"", ""0.3"");
                        }
                    }
                }, this);

                chart.events.on(""ready"", function (ev) {
                    $(""#chartdiv title"").last().parent().remove()
                    var elems = [];

                    for (var i = 1; i < $(""g[transform='translate(0,0)'] tspan"").length; i++) {
                        elems.pus");
            WriteLiteral(@"h($(""g[transform='translate(0,0)'] tspan"")[i]);
                    }

                    for (var i = 0; i < elems.length; i++) {
                        var dd = elems[i];
                        $(elems[i]).removeAttr(""class"").attr(""class"", ""actionIcon"");
                        $(elems[i]).removeAttr(""onclick"").attr(""onclick"", ""getChartDetail('"" + dd.innerHTML.trim() + ""')"");

                    }

                    $(""tspan"").removeAttr(""fill"").attr(""fill"", ""white"");
                    var gler = $(""g"");

                    for (var i = 0; i < gler.length; i++) {
                        var stroke = $(gler[i]).attr(""stroke"");
                        var fill = $(gler[i]).attr(""fill"");

                        if (stroke != null && fill == ""none"") {
                            $(gler[i]).removeAttr(""stroke"").attr(""stroke"", ""silver"");
                            $(gler[i]).removeAttr(""stroke-opacity"").attr(""stroke-opacity"", ""0.3"");
                        }
                    }");
            WriteLiteral(@"
                });



            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }

</script>
<script>
    //Date picker
    //  $('#StartDatePicker1').datepicker({
    //    autoclose: true
    //  })
    //  $('#EndDatePicker1').datepicker({
    //    autoclose: true
    //  })</script>
<!-- Styles -->
<style>

    #chartdiv {
        margin-top: 30px;
        background-color: #487e95;
        width: 100%;
        height: 750px !important;
    }
</style>
<script>
  $(""#tarihDiv"").html(`<h6>
    <b style=""text-transform: initial; display: block; background: linear-gradient(to left, #d2d2d2, #27c6da); -webkit-background-clip: text !important; -webkit-text-fill-color: transparent;"">Başlangıç Tarihi: ");
            EndContext();
            BeginContext(11076, 96, false);
#line 292 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
                                                                                                                                                                                                             Write(Html.Raw(Model.FirstOrDefault().Year == 1 ? "-" : Model.FirstOrDefault().ToString("dd/MM/yyyy")));

#line default
#line hidden
            EndContext();
            BeginContext(11172, 214, true);
            WriteLiteral("</b>\r\n\r\n    <b style=\"text-transform: initial; display: block; background: linear-gradient(to left, #d2d2d2, #27c6da); -webkit-background-clip: text !important; -webkit-text-fill-color: transparent;\">Bitiş Tarihi: ");
            EndContext();
            BeginContext(11387, 94, false);
#line 294 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
                                                                                                                                                                                                         Write(Html.Raw(Model.LastOrDefault().Year == 1 ? "-" : Model.LastOrDefault().ToString("dd/MM/yyyy")));

#line default
#line hidden
            EndContext();
            BeginContext(11481, 329, true);
            WriteLiteral(@"</b>

    <b id=""projectPerId"" style=""display: none; text-transform: initial; display: block; background: linear-gradient(to left, #d2d2d2, #27c6da); -webkit-background-clip: text !important; -webkit-text-fill-color: transparent;"">Proje Yüzdesi: -</b>
  </h6>`);
</script>


<div id=""chartdiv""></div>
<!-- Resources -->
");
            EndContext();
            BeginContext(11810, 56, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "aa6f491d525842d28a95be458bdb477c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11866, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(11868, 58, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d055c54ec57407f877e3c72f159b304", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11926, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(11928, 60, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e0b8c1e187864b89b9fc5a8e2d10fa95", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11988, 1527, true);
            WriteLiteral(@"
<!-- Chart code -->

<script>

function days_between(date1, date2) {
	date1 = new Date(date1.split(""-"")[0], date1.split(""-"")[1], date1.split(""-"")[2]);
	date2 = new Date(date2.split(""-"")[0], date2.split(""-"")[1], date2.split(""-"")[2]);
    // The number of milliseconds in one day
    var ONE_DAY = 1000 * 60 * 60 * 24;

    // Convert both dates to milliseconds
    var date1_ms = date1.getTime();
    var date2_ms = date2.getTime();

    // Calculate the difference in milliseconds
    var difference_ms = Math.abs(date1_ms - date2_ms);

    // Convert back to days and return
    return Math.round(difference_ms/ONE_DAY);

    }



    function addDays(date, days) {
        var result = new Date(date.split(""-"")[0], parseInt(date.split(""-"")[1]) - 1, date.split(""-"")[2]);
        result.setDate(result.getDate() + days);
        var y = result.getFullYear();
        var m = result.getMonth().toString().length == 1 ? ""0"" + result.getMonth().toString() : result.getMonth().toString();
        ");
            WriteLiteral(@"var d = result.getDay().toString().length == 1 ? ""0"" + result.getDay().toString() : result.getDay().toString();
        return result.toISOString().substring(0, 10);
    }

    function getTRDateFormat(date) {
        var year = date.split(""-"")[0];
        var month = date.split(""-"")[1];
        var day = date.split(""-"")[2];

        return day + ""/"" + month + ""/"" + year;
    }

    function getChartDetail(milestoneName) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(13516, 39, false);
#line 350 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
             Write(Url.Action("GetChartDetail", "Roadmap"));

#line default
#line hidden
            EndContext();
            BeginContext(13555, 1206, true);
            WriteLiteral(@"',
            data: {
                ""_milestoneName"": milestoneName
            },
            success: function (data) {

                $(""#modalChartDetay table tbody"").html('');
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    html += ""<tr>"";
                    html += ""<td>"" + customReplaceAll(data[i][""SprintName""], "" "", ""&nbsp"") + ""</td>"";
                    html += data[i][""TaskStatus""] == 3 ? (""<td><del>"" + data[i][""TaskName""] + ""</del></td>"") : (""<td>"" + data[i][""TaskName""] + ""</td>"");
                    html += ""<td>"" + data[i][""AssigneeUserName""] + ""</td>"";
                    html += ""<td style=\""text-align: left;\"">"" + customReplaceAll(customReplaceAll(data[i][""Workers""], "", "", ""<br>""), "" "", ""&nbsp"") + ""</td>"";
                    html += ""</tr>"";
                }

                $(""#modalChartDetay table tbody"").html(html);
                $(""#modalChartDetay"").modal('show');
            }
        });
    }
");
            WriteLiteral("\r\n\r\n\r\n\r\n    $(document).ready(function () {\r\n        //getMilestoneInfo();\r\n    });\r\n\r\n    function getAllProject() {\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
            EndContext();
            BeginContext(14762, 39, false);
#line 383 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
             Write(Url.Action("GetAllProjeler", "Project"));

#line default
#line hidden
            EndContext();
            BeginContext(14801, 1165, true);
            WriteLiteral(@"',
            data: {},
            dataType: 'json',
            async: false,
            success: function (data) {

                $(""#divMilestoneEkleSelect select"").html('');
                var html = '';


                for (var i = 0; i < data.length; i++) {
                    html += `<option value=""` + data[i][""Id""] + `"">` + data[i][""Name""] + `</option>`;

                }
                $(""#divMilestoneEkleSelect .selectpicker"").html(html);
                $('.selectpicker').selectpicker();
                $('.selectpicker').selectpicker('refresh');

            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }

    function saveMilestone() {

        var titleMilestone = $(""#titleMilestone"").val();
        var startDate = $(""#StartDatePicker1"").val();
        var endDate = $(""#EndDatePicker1"").val();
        var description = $(""#MileDescription"").val();
        var projectID = $(""#divMilestoneEkleSelect sel");
            WriteLiteral("ect\").val();\r\n        var milestoneId = $(\"#modalProjeEkleProjeId\").val();\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
            EndContext();
            BeginContext(15967, 38, false);
#line 419 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
             Write(Url.Action("SaveMilestone", "Roadmap"));

#line default
#line hidden
            EndContext();
            BeginContext(16005, 530, true);
            WriteLiteral(@"',
            data: {
                ""_titleMilestone"": titleMilestone,
                ""_endDate"": endDate,
                ""_startDate"": startDate,
                ""_description"": description,
                ""_projectID"": projectID,
                ""_milestoneId"": milestoneId

            },
            success: function (data) {
                swal(""BAŞARILI!"");
                $(""#modalProjeEkleProjeId"").val('0');
                $(""#titleMilestone"").val('');
                $(""#StartDatePicker1"").val('");
            EndContext();
            BeginContext(16536, 69, false);
#line 433 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
                                       Write(DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/"));

#line default
#line hidden
            EndContext();
            BeginContext(16605, 47, true);
            WriteLiteral("\');\r\n                $(\"#EndDatePicker1\").val(\'");
            EndContext();
            BeginContext(16653, 69, false);
#line 434 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
                                     Write(DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/"));

#line default
#line hidden
            EndContext();
            BeginContext(16722, 2595, true);
            WriteLiteral(@"');
                $(""#MileDescription"").val('');
                window.location.reload();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });

    }

</script>

<div id=""modalChartDetay"" class=""modal"">
    <div class=""modal-content"">
        <i onclick=""$('#modalChartDetay').modal('hide');"" class=""actionIcon fa fa-times""></i>
        <h3 class=""box-title"">Görevler</h3>
        <div style=""line-height:2.5"">
            <div class=""box-header"">
                <div class=""box-tools"">
                    <div class=""input-group input-group-sm"" style=""width: 150px;"">
                    </div>
                </div>
            </div>
            <!-- /.box-header -->
            <div class=""box-body col-md-15"">
                <table class=""table"">
                    <thead>
                        <tr>
                            <th>Sprint&nbsp;Adı</th>
                            <th>Görev&nbsp;Adı</th>
                ");
            WriteLiteral(@"            <th>Atanan&nbsp;Kullanıcı</th>
                            <th>Çalışanlar</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>

<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-md-12"">
            <!-- MILESTONE EKLE MODAL -->
            <div class=""modal fade"" id=""milestoneEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style=""display: none; margin-top: 160px;"">
                <div class=""modal-dialog modal-login"">
                    <div class=""modal-content"" style=""width: 100%"">
                        <div class=""card card-signup card-plain"">
                            <div class=""modal-header"">
                                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true""><i class=""material-icons"">clear</i></button>
  ");
            WriteLiteral(@"                              <div class=""header header-info text-center"">
                                    <h4 class=""card-title"">Milestone Oluştur</h4>
                                    <p class=""description text-center"" style=""color: white;"">
                                        Buradan milestone oluşturabilirsiniz.
                                    </p>
                                </div>
                            </div>
                            <div class=""modal-body mr-3 ml-0"">
                                ");
            EndContext();
            BeginContext(19317, 4606, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "036458dc4ec9478b912bb5c7c7317731", async() => {
                BeginContext(19356, 1497, true);
                WriteLiteral(@"
                                    <div class=""card-content py-4"">
                                        <div class=""input-group"">
                                            <span class=""input-group-addon"">
                                                <i class=""material-icons"">text_format</i>
                                            </span>
                                            <input id=""modalProjeEkleProjeId"" value=""0"" style=""display: none;"" />
                                            <div class=""form-group is-empty"">
                                                <input id=""titleMilestone"" type=""text"" class=""form-control"" style=""color:black!important;"" placeholder=""Başlık giriniz."">
                                            </div>
                                        </div>
                                        <div class=""input-group"">
                                            <span class=""input-group-addon"">
                                                <i cla");
                WriteLiteral(@"ss=""material-icons"">calendar_today</i>
                                            </span>
                                            <div class=""form-group"">
                                                <label class=""label-control"">Başlangıç Tarihi</label>
                                                <input id=""StartDatePicker1"" style=""color:black!important;"" type=""text""
                                                       class=""form-control datepicker""");
                EndContext();
                BeginWriteAttribute("value", "\r\n                                                       value=\"", 20853, "\"", 20987, 1);
#line 514 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
WriteAttributeValue("", 20917, DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/"), 20917, 70, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(20988, 790, true);
                WriteLiteral(@" autocomplete=""off"" />
                                            </div>
                                        </div>
                                        <div class=""input-group"">
                                            <span class=""input-group-addon"">
                                                <i class=""material-icons"">calendar_today</i>
                                            </span>
                                            <div class=""form-group"">
                                                <label class=""label-control"">Bitiş Tarihi</label>
                                                <input id=""EndDatePicker1"" style=""color:black!important;"" type=""text""
                                                       class=""form-control datepicker""");
                EndContext();
                BeginWriteAttribute("value", "\r\n                                                       value=\"", 21778, "\"", 21912, 1);
#line 525 "C:\Users\merve\Desktop\PMP\PMPCore\Views\Roadmap\Index.cshtml"
WriteAttributeValue("", 21842, DateTime.Now.ToString("dd/MM/yyyy").Replace(".","/").Replace("-","/"), 21842, 70, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(21913, 1612, true);
                WriteLiteral(@" autocomplete=""off"" />
                                            </div>
                                        </div>
                                        <div class=""input-group mt-3"">
                                            <span class=""input-group-addon"">
                                                <i class=""material-icons"">description</i>
                                            </span>
                                            <div class=""form-group is-empty"">
                                                <textarea id=""MileDescription"" class=""form-control""
                                                          style=""color:black !important;""
                                                          placeholder=""Açıklama giriniz."" rows=""4""></textarea>
                                            </div>
                                        </div>
                                        <div id=""divMilestoneEkleSelect"" class=""input-group mt-5"">
                       ");
                WriteLiteral(@"                     <span class=""input-group-addon"">
                                                <i class=""material-icons"">linear_scale</i>
                                            </span>
                                            <div class=""form-group is-empty"">
                                                <select class=""selectpicker"">
                                                    data-style=""btn btn-info btn-round""
                                                    title=""sprınt seçin"" data-size=""7"">
                                                    ");
                EndContext();
                BeginContext(23525, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cbb0085344c9490bbe1bed78c97ddcff", async() => {
                    BeginContext(23543, 6, true);
                    WriteLiteral("Foobar");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23558, 54, true);
                WriteLiteral("\r\n                                                    ");
                EndContext();
                BeginContext(23612, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "728021ba45124c49a2e290495a473295", async() => {
                    BeginContext(23630, 8, true);
                    WriteLiteral("Is great");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23647, 269, true);
                WriteLiteral(@"
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                            </div>
                            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(23923, 656, true);
            WriteLiteral(@"
                        </div>
                        <div class=""modal-footer text-center m-5 my-auto py-4""
                             style=""border-top: 1px solid #f1efef;"">
                            <button onclick=""saveMilestone()"" class=""btn btn-info btn-round"">
                                <i class=""material-icons"">save_alt</i> Kaydet
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- MILESTONE EKLE MODAL -->
        </div>
    </div>
</div>
                </div>
            </div>
        </div>
    </div>


");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<DateTime>> Html { get; private set; }
    }
}
#pragma warning restore 1591
