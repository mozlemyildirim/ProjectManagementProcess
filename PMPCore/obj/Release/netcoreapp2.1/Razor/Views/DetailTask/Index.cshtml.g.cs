#pragma checksum "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8ee51e99880a4f71248483e8b58a3cbafa2e9c99"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DetailTask_Index), @"mvc.1.0.view", @"/Views/DetailTask/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/DetailTask/Index.cshtml", typeof(AspNetCore.Views_DetailTask_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\merve\Desktop\PMP\PMPCore\Views\_ViewImports.cshtml"
using PMPCore;

#line default
#line hidden
#line 2 "C:\Users\merve\Desktop\PMP\PMPCore\Views\_ViewImports.cshtml"
using PMPCore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8ee51e99880a4f71248483e8b58a3cbafa2e9c99", @"/Views/DetailTask/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4fb46c8f1508255f860685ecf7a4631592682f6c", @"/Views/_ViewImports.cshtml")]
    public class Views_DetailTask_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
#line 3 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
  
    ViewBag.Title = "Detaylı Görev";
    ViewBag.ActivePageName = "Detaylı Görev";

#line default
#line hidden
            BeginContext(96, 2630, true);
            WriteLiteral(@"
<style>

    .dataTable {
        color: white !important;
    }

    .row {
        color: black;
    }

    .checkbox label, .radio label, label, .label-on-left, .label-on-right {
        color: white;
    }

    .pagination > li > a, .pagination > li > span {
        color: white;
    }

    th {
        font-size: 18px;
    }

    td {
        font-size: 18px;
    }

    .table > tbody > tr {
        background-color: #07a0b1;
    }

    .table-striped > tbody > tr:nth-of-type(odd) {
        background-color: #54bcc8;
    }

    .customInfoBox {
        transition: all 0.5s;
    }

        .customInfoBox:hover {
            color: #d2d2d2 !important;
        }

    .select2-container--default .select2-results > .select2-results__options {
        background-color: #00bcd4 !important;
    }

    .select2-container--default .select2-results > .select2-results__options {
        background-color: #00bcd4 !important;
    }

    .select2-container--default .s");
            WriteLiteral(@"elect2-selection--multiple .select2-selection__choice {
        background-color: #00bcd4;
        border: 1px solid #00bcd4;
        border-radius: 4px;
        cursor: default;
        float: left;
        margin-right: 5px;
        margin-top: 5px;
        padding: 0 5px;
        color: white;
        font-family: sans-serif;
        font-size: 11px;
        border: 1px solid white;
        font-weight: bold;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice__remove {
        color: white;
        cursor: pointer;
        display: inline-block;
        font-weight: bold;
        margin-right: 3px;
        color: white;
        font-size: 15px;
        /* margin-top: 5px; */
        float: left;
        margin-top: -1px;
    }

        .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover {
            color: red !important;
        }

    .select2-container--default.select2-container--f");
            WriteLiteral(@"ocus .select2-selection--multiple {
        border: solid #00bcd4 1.4px;
        outline: 0;
        max-height: 75px !important;
        overflow-x: auto !important;
    }


    .select2-dropdown {
        z-index: 12372832183728327432789 !important;
    }
</style>
<script>
    function showPopup(stepId, boardId, elem)
    {
         if ($(""#handMadeToolTip"").is(':visible'))
            return;

        boardId = $(elem).parent().parent().parent().parent().attr(""id"").replace(""divOuter"", """");

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(2727, 39, false);
#line 113 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetStepHoverInfo", "Board"));

#line default
#line hidden
            EndContext();
            BeginContext(2766, 2894, true);
            WriteLiteral(@"',
            data: {
                ""_stepId"": stepId,
                ""_boardId"": boardId
            },
            success: function (data) {
                var htmlStr = data;

                var rect = elem.getBoundingClientRect();
                var left = rect.left + ""px"";
                var topd = rect.top + ""px"";

                htmlStr = '<div style=""position: absolute; top: ' + topd + '; left: ' + left + '; margin-left: 20px; background-color: rgba(0, 0, 0, 0.6); color: white; z-index: 12438714372393; padding: 10px; border-radius: 10px !important; font-weight: bold; font-size: 12px;"" id=""handMadeToolTip"">' + htmlStr + ""</div>"";
                $(""body"").append(htmlStr);
            }
        });
    }

</script>

<div class=""container-fluid"" id=""divMain"">
    <div class=""row mt-5"">
    </div>
</div>
<!-- AKTİF GÖREVLER BURADAN BAŞLIYOR -->
<div class=""col-md-12 mb-5 pb-5"" style=""margin-top:20px"">
    <div class=""card""
         style=""        background: #486d89;
");
            WriteLiteral(@"        color: white;
        box-shadow: 0px 0px 9px 2px #48484896;
        border-radius: 10px;
"">

        <div class=""card-content"">
            <h4 class=""card-title"" style=""color:white;"">GÖREV DETAYLARI</h4>
            <div id=""divGorevListesi"" style=""color:white !important"" class=""table-responsive"">
                <table class=""table table-striped table-no-bordered table-hover dataTable dtr-inline"">
                    <tr style=""font-size: 12px !important"">
                        <th>Başlık</th>
                        <th>Bitiş Tarihi</th>
                        <th>Durum</th>
                        <th>Çalışanlar</th>
                        <th></th>
                    </tr>
                </table>
            </div>
        </div>

        <!-- end content-->
    </div>
    <!--  end card  -->
</div>
<!-- AKTİF GÖREVLER BURADA BİTİYOR -->
<div class=""modal fade"" id=""projeEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style=""");
            WriteLiteral(@" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info text-center"">
                        <h4 class=""card-title"">Proje Ekle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  proje ekleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(5660, 1316, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "505125a762644aa8a81683e64fed9610", async() => {
                BeginContext(5699, 1270, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <div class=""form-group is-empty"">
                                    <input id=""modalGorevEkleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""modalGorevEkleProjeAdi"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Proje adını giriniz."">
                                </div>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <label class=""label-control"">Bitiş Tarihi</label>
                                    <input style=""color:black!important;"" type=""text""
        ");
                WriteLiteral("                                   class=\"form-control datepicker\" id=\"EndDatePicker\" value=\"\" autocomplete=\"off\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6976, 1404, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""savePano()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevEkleModalProje"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-in");
            WriteLiteral(@"fo text-center"">
                        <h4 class=""card-title"">Görev Ekle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev ekleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(8380, 2283, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9c48a35382b14c76bf84d9fe4e26402b", async() => {
                BeginContext(8419, 833, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div id=""divProjectSelect"" class=""form-group is-empty"">

                                </div>
                                <div class=""form-group is-empty"">
                                    <input id=""gorevEkleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""todoName"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(9623, 1033, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""todoEndDate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""divGorevEkleCalisanSecSelect2"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
           ");
                WriteLiteral("         ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10663, 1399, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""saveTodo()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevEkleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info te");
            WriteLiteral(@"xt-center"">
                        <h4 class=""card-title"">Görev Ekle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev ekleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(12062, 2151, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "57e11067e48a43d5b3f6e861a9aa0051", async() => {
                BeginContext(12101, 702, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <input id=""gorevEkleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""todoName"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(13174, 1032, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""todoEndDate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""divGorevEkleCalisanSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
            ");
                WriteLiteral("        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14213, 1406, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""saveTodo()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevEkleModal2"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info t");
            WriteLiteral(@"ext-center"">
                        <h4 class=""card-title"">Görev Düzenle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev düzenleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(15619, 2171, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c131e7c3fc3e49a88b6aa0dc71ce7aef", async() => {
                BeginContext(15658, 712, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <input id=""gorevDüzenleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""düzenletodoName"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(16741, 1042, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""düzenletodoEndDate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""divGorevDüzenleCalisanSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
  ");
                WriteLiteral("                  ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17790, 1413, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""updateTodo()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevEkleModal2Proje"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header");
            WriteLiteral(@"-info text-center"">
                        <h4 class=""card-title"">Görev Düzenle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev düzenleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(19203, 2429, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "005ea1a13eec4212a64633111f7b2337", async() => {
                BeginContext(19242, 970, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">text_format</i>
                                </span>
                                <div class=""form-group is-empty"">
                                    <select class=""selectpicker"" data-style=""select-with-transition"" title=""PROJE SEÇİNİZ"" id=""taskProjeId""></select>
                                </div>
                                <div class=""form-group is-empty"">
                                    <input id=""gorevDüzenleProjeId"" value=""0"" style=""display: none;"">
                                    <input id=""düzenletodoName"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(20583, 1042, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""düzenletodoEndDate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""divGorevDüzenleCalisanSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
  ");
                WriteLiteral("                  ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(21632, 1352, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""updateTodo()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevGetirModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info");
            WriteLiteral(@" text-center"">
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev detaylarını inceleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""modal-body mr-5 ml-4"">
                    ");
            EndContext();
            BeginContext(22984, 2543, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df732338261442dda40e6711ba4ac5e2", async() => {
                BeginContext(23023, 817, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <div class=""form-group is-empty"">
                                    <label>Başlık</label>
                                    <input id=""gorevGetirTitle"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                                <div class=""form-group is-empty"">
                                    <label>Açıklama</label>
                                    <input id=""gorevGetirDetail"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(24211, 1309, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""gorevGetirEndDate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""getCalisanSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div id=""getPreTaskSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Öncelikli Görev"" style=""width: 100%;""></select>
                            </div>
                            <div class=""inp");
                WriteLiteral(@"ut-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(25527, 1067, true);
            WriteLiteral(@"
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""gorevUpdateModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" style="" display: none;"">
    <div class=""modal-dialog modal-login"">
        <div class=""modal-content"">
            <div class=""card card-signup card-plain"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""
                            aria-hidden=""true"">
                        <i class=""material-icons"">clear</i>
                    </button>
                    <div class=""header header-info text-center"">
                        <h4 class=""card-title"">Görev Güncelle</h4>
                        <p class=""description text-center"" style=""color:white;"">
                            Buradan  görev güncelleyebilirsiniz.
                        </p>
                    </div>
                </div>
                <div class=""m");
            WriteLiteral("odal-body mr-5 ml-4\">\r\n                    ");
            EndContext();
            BeginContext(26594, 2718, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b6c6d6f7cf124a368d9a15e7f7bf4131", async() => {
                BeginContext(26633, 1010, true);
                WriteLiteral(@"
                        <div class=""card-content py-4"">
                            <div class=""input-group"">
                                <div class=""form-group is-empty"">
                                    <label>Başlık</label>
                                    <input id=""gorevGetirTitleUpdate"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                    <input id=""gorevGetirIdUpdate"" type=""text"" class=""form-control"" style=""color: black!important;display:none"" placeholder=""Görev adını giriniz."">
                                </div>
                                <div class=""form-group is-empty"">
                                    <label>Açıklama</label>
                                    <input id=""gorevGetirDetailUpdate"" type=""text"" class=""form-control"" style=""color: black!important;"" placeholder=""Görev adını giriniz."">
                                </div>
                            </div>
");
                EndContext();
                BeginContext(27978, 1327, true);
                WriteLiteral(@"                            <div class=""form-group is-empty"">
                                <label class=""label-control"">Bitiş Tarihi</label>
                                <input style=""color:black!important;"" type=""text"" class=""form-control datepicker"" id=""gorevGetirEndDateUpdate"" value="""" autocomplete=""off"">
                                <span class=""material-input""></span>
                            </div>

                            <div id=""getCalisanUpdateSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Çalışanları Seç"" style=""width: 100%;""></select>
                            </div>
                            <div id=""getPreTaskUpdateSecSelect"" class=""form-group is-empty"">
                                <select class=""form-control select2"" multiple=""multiple"" data-placeholder=""Öncelikli Görev"" style=""width: 100%;""></select>
                            </div>
                         ");
                WriteLiteral(@"   <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""material-icons"">short_text</i>
                                </span>
                            </div>
                        </div>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(29312, 5841, true);
            WriteLiteral(@"
                </div>
                <div class=""modal-footer text-center m-5 my-auto py-4""
                     style=""border-top: 1px solid #f1efef;"">
                    <button onclick=""updateTask()"" class=""btn btn-info btn-round"">
                        <i class=""material-icons"">save_alt</i> Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .swal2-container {
        z-index: 99999999999999999999999999999999999999999999999999999999999999999 !important;
    }

    .pure-material-checkbox {
        z-index: 0;
        position: relative;
        display: inline-block;
        color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.87);
        font-family: var(--pure-material-font, ""Roboto"", ""Segoe UI"", BlinkMacSystemFont, system-ui, -apple-system);
        font-size: 16px;
        line-height: 1.5;
    }

        /* Input */
        .pure-material-checkbox > input {
            appearance: none;
");
            WriteLiteral(@"            -moz-appearance: none;
            -webkit-appearance: none;
            z-index: -1;
            position: absolute;
            left: -10px;
            top: -8px;
            display: block;
            margin: 0;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            background-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
            box-shadow: none;
            outline: none;
            opacity: 0;
            transform: scale(1);
            pointer-events: none;
            transition: opacity 0.3s, transform 0.2s;
        }

        /* Span */
        .pure-material-checkbox > span {
            display: inline-block;
            width: 100%;
            cursor: pointer;
        }

            /* Box */
            .pure-material-checkbox > span::before {
                content: """";
                display: inline-block;
                box-sizing: border-box;
                margin: 3px 11px 3px 1");
            WriteLiteral(@"px;
                border: solid 2px; /* Safari */
                border-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
                border-radius: 2px;
                width: 18px;
                height: 18px;
                vertical-align: top;
                transition: border-color 0.2s, background-color 0.2s;
            }

            /* Checkmark */
            .pure-material-checkbox > span::after {
                content: """";
                display: block;
                position: absolute;
                top: 3px;
                left: 1px;
                width: 10px;
                height: 5px;
                border: solid 2px transparent;
                border-right: none;
                border-top: none;
                transform: translate(3px, 4px) rotate(-45deg);
            }

        /* Checked, Indeterminate */
        .pure-material-checkbox > input:checked,
        .pure-material-checkbox > input:indeterminate {
            back");
            WriteLiteral(@"ground-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
        }

            .pure-material-checkbox > input:checked + span::before,
            .pure-material-checkbox > input:indeterminate + span::before {
                border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
                background-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
            }

            .pure-material-checkbox > input:checked + span::after,
            .pure-material-checkbox > input:indeterminate + span::after {
                border-color: rgb(var(--pure-material-onprimary-rgb, 255, 255, 255));
            }

            .pure-material-checkbox > input:indeterminate + span::after {
                border-left: none;
                transform: translate(4px, 3px);
            }

        /* Hover, Focus */
        .pure-material-checkbox:hover > input {
            opacity: 0.04;
        }

        .pure-material-checkbox > input:focus {
            opacit");
            WriteLiteral(@"y: 0.12;
        }

        .pure-material-checkbox:hover > input:focus {
            opacity: 0.16;
        }

        /* Active */
        .pure-material-checkbox > input:active {
            opacity: 1;
            transform: scale(0);
            transition: transform 0s, opacity 0s;
        }

            .pure-material-checkbox > input:active + span::before {
                border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
            }

        .pure-material-checkbox > input:checked:active + span::before {
            border-color: transparent;
            background-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
        }

        /* Disabled */
        .pure-material-checkbox > input:disabled {
            opacity: 0;
        }

            .pure-material-checkbox > input:disabled + span {
                color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.38);
                cursor: initial;
            }

                .p");
            WriteLiteral(@"ure-material-checkbox > input:disabled + span::before {
                    border-color: currentColor;
                }

        .pure-material-checkbox > input:checked:disabled + span::before,
        .pure-material-checkbox > input:indeterminate:disabled + span::before {
            border-color: transparent;
            background-color: currentColor;
        }
</style>
<script>
    var selectedToProjectId = 0;
    function Dropped(event, ui){
      $("".draggable"").each(function(){
        //My Logic goes here

      });

    }

    $(document).ready(function(){
        fillPano();
    });
    function gorevEkleModal() {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(35154, 46, false);
#line 738 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllQuickTaskUser", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(35200, 891, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    //$(""#divGorevEkleCalisanSecSelect select option[value='"" + data[i][""Id""] + ""']"").attr(""selected"", ""selected"");
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#divGorevEkleCalisanSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
        $('#gorevEkleModal').modal('show');
    }
    function gorevEkleModalProje() {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(36092, 46, false);
#line 760 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllQuickTaskUser", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(36138, 802, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    //$(""#divGorevEkleCalisanSecSelect select option[value='"" + data[i][""Id""] + ""']"").attr(""selected"", ""selected"");
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#divGorevEkleCalisanSecSelect2 select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(36941, 49, false);
#line 779 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllQuickTaskProject", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(36990, 843, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = '<select class=""selectpicker"" data-style=""select-with-transition"" id=""taskProjeId2"" title=""PROJE SEÇİNİZ"">';
                    for(var i = 0; i < data.length; i++)
                    {
                        html+= `<option value=""`+data[i][""Id""]+`"">`+data[i][""Name""]+`</option>`;
                    }
                    html += ""</select>"";
                    $(""#divProjectSelect"").html(html);
                    $('.selectpicker').selectpicker();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
        $('#gorevEkleModalProje').modal('show');
    }
    function gorevEkleModal2(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(37834, 46, false);
#line 801 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllQuickTaskUser", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(37880, 806, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    //$(""#divGorevEkleCalisanSecSelect select option[value='"" + data[i][""Id""] + ""']"").attr(""selected"", ""selected"");
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#divGorevDüzenleCalisanSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(38687, 43, false);
#line 821 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetQuickTaskById", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(38730, 935, true);
            WriteLiteral(@"',
            data: {
                ""_todoId"": id
            },
            success: function (data) {

                var persons = data[0].Persons;

                for (var i = 0; i < persons.length; i++) {
                    $(""#divGorevDüzenleCalisanSecSelect select option[value='"" + persons[i].Id + ""']"").attr(""selected"", ""selected"");
                }

                $('#düzenletodoEndDate').val(data[0].StrDate);
                $('#düzenletodoName').val(data[0].Detail);
                $('#düzenletodoId').val(data[0].Id);

                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });

        $('#gorevEkleModal2').modal('show');
    }
     function gorevEkleModal2Proje(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(39666, 46, false);
#line 850 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllQuickTaskUser", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(39712, 774, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    //$(""#divGorevEkleCalisanSecSelect select option[value='"" + data[i][""Id""] + ""']"").attr(""selected"", ""selected"");
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#divGorevDüzenleCalisanSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(40487, 43, false);
#line 869 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetQuickTaskById", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(40530, 951, true);
            WriteLiteral(@"',
            data: {
                ""_todoId"": id
            },
            success: function (data) {

                var persons = data[0].Persons;

                for (var i = 0; i < persons.length; i++) {
                    $(""#divGorevDüzenleCalisanSecSelect select option[value='"" + persons[i].Id + ""']"").attr(""selected"", ""selected"");
                }

                $('#düzenletodoEndDate').val(data[0].StrDate);
                $('#düzenletodoName').val(data[0].Detail);
                $('#düzenletodoId').val(data[0].Id);

                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {

            }
        });

        $('#gorevEkleModal2').modal('show');
    }
    function fillPano() {
        $('#divMain').html('<div class=""row mt-5""></div>');
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(41482, 49, false);
#line 899 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllQuickTaskProject", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(41531, 979, true);
            WriteLiteral(@"',
            data: {},
            success: function (data) {
                console.log(data);
                if (data.length == 1) {
                    getAllGorevler(data[0].Id);
                }
                else {
                    swal(""Lütfen proje seçiniz!"");
                }
                   },
            error: function (err) {

            }
        });
    }
    function saveTodo() {
        var todoName = $('#todoName').val();
        var todoEndDate = $('#todoEndDate').val();
        var todoUsers;
        var projectId;
        debugger;
        if (selectedToProjectId ==0) {
            projectId = $('#taskProjeId2').val();
            todoUsers=$('#divGorevEkleCalisanSecSelect2 select').val();
        }
        else {
            projectId = selectedToProjectId;
            todoUsers=$('#divGorevEkleCalisanSecSelect select').val();
        }
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(42511, 40, false);
#line 931 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("SaveQuickTask", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(42551, 826, true);
            WriteLiteral(@"',
            data: {
                ""_projectId"": projectId,
                ""_todoName"": todoName,
                ""_todoEndDate"": todoEndDate,
                ""_todoUsers"":todoUsers
            },
            success: function (data) {
                $('#gorevEkleModal2').modal('hide');
                swal(""kayıt başarılı!"");
                fillPano();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function updateTodo() {
        var todoName = $('#düzenletodoName').val();
        var todoEndDate = $('#düzenletodoEndDate').val();
        var todoId = $('#todoIdForUpdate').val();
        var todoUsers = $('#divGorevDüzenleCalisanSecSelect select').val();
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(43378, 42, false);
#line 955 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("UpdateQuickTask", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(43420, 990, true);
            WriteLiteral(@"',
            data: {
                ""_projectId"": selectedToProjectId,
                ""_todoId"": todoId,
                ""_todoName"": todoName,
                ""_todoEndDate"": todoEndDate,
                ""_todoUsers"":todoUsers
            },
            success: function (data) {
                $('#gorevEkleModal2').modal('hide');
                swal(""kayıt başarılı!"");
                fillPano();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function updateTask() {
        var title = $('#gorevGetirTitleUpdate').val();
        var detail = $('#gorevGetirDetailUpdate').val();
        var EndDate = $('#gorevGetirEndDateUpdate').val();
        var Id = $('#gorevGetirIdUpdate').val();
        var Users = $('#getCalisanUpdateSecSelect select').val();
        var Tasks = $('#getPreTaskUpdateSecSelect select').val();
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(44411, 38, false);
#line 982 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("UpdateTask", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(44449, 659, true);
            WriteLiteral(@"',
            data: {
                ""_todoId"": Id,
                ""_todoTitle"": title,
                ""_todoDetail"": detail,
                ""_todoEndDate"": EndDate,
                ""_todoUsers"":Users,
                ""_todoTasks"":Tasks
            },
            success: function (data) {
                swal(""güncelleme başarılı!"");
                 $('#gorevUpdateModal').modal('hide');
                fillPano();

            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function updateTaskModal(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(45109, 55, false);
#line 1005 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllDetailTaskByProjectId", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(45164, 1295, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                console.log(data);
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Title""]+'</option>';
                }
                $(""#getPreTaskUpdateSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });
       /* $.ajax({
            type: ""POST"",
            url:
          /*  data: {
                ""_taskId"":id
            },
            success: function (data) {
                var html = """";
                if (data[0].[""PreTaskId""] != 0) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#getPreTaskSecSelect ");
            WriteLiteral(@"select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });*/
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(46460, 40, false);
#line 1041 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllToDoUser", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(46500, 633, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#getCalisanUpdateSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(47134, 43, false);
#line 1058 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetQuickTaskById", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(47177, 1059, true);
            WriteLiteral(@"',
            data: {
                ""_taskId"": id
            },
            success: function (data) {
                debugger;
                for (var i = 0; i < data[0].Persons.length; i++) {
                    $(""#getCalisanUpdateSecSelect select option[value='"" + data[0].Persons[i].Id + ""']"").attr(""selected"", ""selected"");
                }
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
                console.log(data);
                $('#gorevGetirIdUpdate').val(data[0].Id);
                $('#gorevGetirTitleUpdate').val(data[0].Title);
                $('#gorevGetirDetailUpdate').val(data[0].Detail);
                $('#gorevGetirEndDateUpdate').val(data[0].StrDate);
                
                $('#gorevUpdateModal').modal('show');
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
         
    }
    function searchTask(id) {
        $.ajax({
          ");
            WriteLiteral("  type: \"POST\",\r\n            url: \'");
            EndContext();
            BeginContext(48237, 55, false);
#line 1086 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllDetailTaskByProjectId", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(48292, 1289, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                console.log(data);
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Title""]+'</option>';
                }
                $(""#getPreTaskSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });
       /* $.ajax({
            type: ""POST"",
            url:
          /*  data: {
                ""_taskId"":id
            },
            success: function (data) {
                var html = """";
                if (data[0].[""PreTaskId""] != 0) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#getPreTaskSecSelect select");
            WriteLiteral(@""").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });*/
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(49582, 40, false);
#line 1122 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetAllToDoUser", "ToDoList"));

#line default
#line hidden
            EndContext();
            BeginContext(49622, 627, true);
            WriteLiteral(@"',
            data: {
            },
            success: function (data) {
                var html = """";
                for (var i = 0; i < data.length; i++) {
                    html += '<option value=""' + data[i][""Id""] + '"">' + data[i][""Name""] +"" ""+ data[i][""Surname""] +  '</option>';
                }
                $(""#getCalisanSecSelect select"").html(html);
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
            },
            error: function (err) {
            }
        });
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(50250, 43, false);
#line 1139 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetQuickTaskById", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(50293, 975, true);
            WriteLiteral(@"',
            data: {
                ""_taskId"": id
            },
            success: function (data) {
                debugger;
                for (var i = 0; i < data[0].Persons.length; i++) {
                    $(""#getCalisanSecSelect select option[value='"" + data[0].Persons[i].Id + ""']"").attr(""selected"", ""selected"");
                }
                $('.selectpicker').selectpicker('refresh');
                $('.select2').select2();
                console.log(data);
                $('#gorevGetirTitle').val(data[0].Title);
                $('#gorevGetirDetail').val(data[0].Detail);
                $('#gorevGetirEndDate').val(data[0].StrDate);
                
                $('#gorevGetirModal').modal('show');
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
         
    }
    function deleteToDo(id) {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(51269, 42, false);
#line 1166 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("DeleteQuickTask", "QuickTask"));

#line default
#line hidden
            EndContext();
            BeginContext(51311, 402, true);
            WriteLiteral(@"',
            data: {
                ""_todoId"": id
            },
            success: function (data) {
                swal(""silindi!"");
                fillPano();
            },
            error: function (err) {
                swal(""hata!"");
            }
        });
    }
    function getAllGorevler(id)
       {
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(51714, 52, false);
#line 1183 "C:\Users\merve\Desktop\PMP\PMPCore\Views\DetailTask\Index.cshtml"
             Write(Url.Action("GetDetailTaskByProjectId", "DetailTask"));

#line default
#line hidden
            EndContext();
            BeginContext(51766, 2391, true);
            WriteLiteral(@"',
            data: {
                ""_projectId"":id
            },
            success: function (data) {
                debugger;
                $(""#divGorevListesi"").html('<table class=""table table-striped table-no-bordered table-hover dataTable dtr-inline""></table>');
                $('#divGorevListesi table').html('<thead><tr style=""background-color: #304a5e;""> <th >Başlık</th> <th >Bitiş Tarihi</th><th >Durum</th> <th>Çalışanlar</th><th></th></tr></thead><tbody>');
                var html = """";

                for (var i = 0; i < data.length; i++) {
                var persons = data[i].Persons;
                var personsName=persons[0].Name+ "" "" + persons[0].Surname;
                var statu;
                for (var a = 1; a < persons.length; a++) {
                        personsName = personsName+ "" "" + persons[a].Name + "" "" + persons[a].Surname;
                }

                    if (data[i][""Status""] == 1) {
                        statu = ""Aktif"";
                ");
            WriteLiteral(@"    }
                    if (data[i][""Status""] == 2) {
                        statu = ""Yapıldı"";
                    }

                    html += `<tr style=""font-size: 12px !important;"">
                             <td style=""vertical-align: top;"">`+ data[i][""Title""] + `</td>
                             <td style=""vertical-align: top;"">`+ ((data[i][""EndDate""]).split('T')[0].startsWith(""0001"") ? ""Girilmedi"" : (data[i][""EndDate""]).split('T')[0]) + `</td>
                             <td style=""vertical-align: top;"">`+ statu+ `</td>
                             <td style=""vertical-align: top;"">`+ personsName+ `</td>
                             <td><i class='fa fa-edit actionIcon' onclick='updateTaskModal(`+data[i][""Id""]+`)' style='float:right; font-size: 18px;margin-right: 5px;'></i><i class='fa fa-trash actionIcon' onclick='deleteToDo(`+data[i][""Id""]+`)' style='font-size: 18px; float:right;margin-right: 5px;'></i><i class='fa fa-search actionIcon' onclick='searchTask(`+data[i][""Id""]+`)' style=");
            WriteLiteral(@"'font-size: 18px; float:right;margin-right: 5px;'></i></td>
                             `;
                }
                html += '</tbody>';
                $('#divGorevListesi table').append(html);
            },
            error: function (err) {
                swal(""hata!"");
            }
        });

       }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
